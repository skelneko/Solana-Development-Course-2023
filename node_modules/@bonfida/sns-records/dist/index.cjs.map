{"version":3,"file":"index.cjs","sources":["../node_modules/base64-js/index.js","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/@noble/hashes/esm/crypto.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/_sha2.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/curves/esm/abstract/utils.js","../node_modules/@noble/curves/esm/abstract/modular.js","../node_modules/@noble/curves/esm/abstract/curve.js","../node_modules/@noble/curves/esm/abstract/edwards.js","../node_modules/@noble/curves/esm/ed25519.js","../node_modules/bn.js/lib/bn.js","../node_modules/safe-buffer/index.js","../node_modules/base-x/src/index.js","../node_modules/@solana/web3.js/node_modules/bs58/index.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../node_modules/@solana/web3.js/node_modules/borsh/lib/index.js","../node_modules/@solana/buffer-layout/lib/Layout.js","../node_modules/bigint-buffer/dist/browser.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/superstruct/lib/index.es.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v1.js","../node_modules/uuid/dist/esm-browser/parse.js","../node_modules/uuid/dist/esm-browser/v35.js","../node_modules/uuid/dist/esm-browser/md5.js","../node_modules/uuid/dist/esm-browser/v3.js","../node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/uuid/dist/esm-browser/v5.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/uuid/dist/esm-browser/nil.js","../node_modules/uuid/dist/esm-browser/version.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/eventemitter3/index.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/@noble/curves/esm/abstract/weierstrass.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/curves/esm/_shortw_utils.js","../node_modules/@noble/curves/esm/secp256k1.js","../node_modules/@solana/web3.js/lib/index.browser.esm.js","../node_modules/borsh/lib/esm/types.js","../node_modules/borsh/lib/esm/utils.js","../node_modules/borsh/lib/esm/buffer.js","../node_modules/borsh/lib/esm/serialize.js","../node_modules/borsh/lib/esm/deserialize.js","../node_modules/borsh/lib/esm/index.js","../src/raw_instructions.ts","../src/bindings.ts","../src/state.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a) => a instanceof Uint8Array;\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (u8a(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexport function equalBytes(b1, b2) {\n    // We don't care about timing attacks here\n    if (b1.length !== b2.length)\n        return false;\n    for (let i = 0; i < b1.length; i++)\n        if (b1[i] !== b2[i])\n            return false;\n    return true;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n, pos, value) => {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || val instanceof Uint8Array,\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, numberToBytesBE, numberToBytesLE, bytesToNumberBE, bytesToNumberLE, ensureBytes, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]\n    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n    function assertInRange(n, max) {\n        // n in [1..max-1]\n        if (inRange(n, max))\n            return n;\n        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n    }\n    function assertGE0(n) {\n        // n in [0..CURVE_ORDER-1]\n        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n    }\n    const pointPrecomputes = new Map();\n    function isPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            if (!in0MaskRange(ex))\n                throw new Error('x required');\n            if (!in0MaskRange(ey))\n                throw new Error('y required');\n            if (!in0MaskRange(ez))\n                throw new Error('z required');\n            if (!in0MaskRange(et))\n                throw new Error('t required');\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            if (!in0MaskRange(x) || !in0MaskRange(y))\n                throw new Error('invalid affine point');\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            const { a, d } = CURVE;\n            if (this.is0())\n                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n            // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n            const { ex: X, ey: Y, ez: Z, et: T } = this;\n            const X2 = modP(X * X); // X²\n            const Y2 = modP(Y * Y); // Y²\n            const Z2 = modP(Z * Z); // Z²\n            const Z4 = modP(Z2 * Z2); // Z⁴\n            const aX2 = modP(X2 * a); // aX²\n            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n            if (left !== right)\n                throw new Error('bad point: equation left != right (1)');\n            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n            const XY = modP(X * Y);\n            const ZT = modP(Z * T);\n            if (XY !== ZT)\n                throw new Error('bad point: equation left != right (2)');\n        }\n        // Compare one point to another.\n        equals(other) {\n            isPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            isPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            const { ex: x, ey: y, ez: z } = this;\n            const is0 = this.is0();\n            if (iz == null)\n                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n            const ax = modP(x * iz);\n            const ay = modP(y * iz);\n            const zz = modP(z * iz);\n            if (is0)\n                return { x: _0n, y: _1n };\n            if (zz !== _1n)\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            if (y === _0n) {\n                // y=0 is allowed\n            }\n            else {\n                // RFC8032 prohibits >= p, but ZIP215 doesn't\n                if (zip215)\n                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n                else\n                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n            }\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        assertGE0(s); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport { bytesToHex, bytesToNumberLE, ensureBytes, equalBytes, numberToBytesLE, } from './abstract/utils.js';\nimport { createHasher, expand_message_xmd } from './abstract/hash-to-curve.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\nfunction ed25519_pow_2_252_3(x) {\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = Field(ED25519_P, undefined, true);\nconst ed25519Defaults = {\n    // Param: a\n    a: BigInt(-1),\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: BigInt(8),\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n};\nexport const ed25519 = /* @__PURE__ */ twistedEdwards(ed25519Defaults);\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n});\nexport const ed25519ph = /* @__PURE__ */ twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n    prehash: sha512,\n});\nexport const x25519 = /* @__PURE__ */ (() => montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255,\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(x) {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options = {}) {\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options = {}) {\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options = {}) {\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n\nfunction assign(...Structs) {\n  const schemas = Structs.map(s => s.schema);\n  const schema = Object.assign({}, ...schemas);\n  return object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nfunction deprecated(struct, log) {\n  return new Struct({ ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      } else {\n        log(value, ctx);\n        return struct.validator(value, ctx);\n      }\n    }\n\n  });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nfunction dynamic(fn) {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nfunction lazy(fn) {\n  let struct;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n\n    *entries(value, ctx) {\n      var _struct;\n\n      (_struct = struct) != null ? _struct : struct = fn();\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      var _struct2;\n\n      (_struct2 = struct) != null ? _struct2 : struct = fn();\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      var _struct3;\n\n      (_struct3 = struct) != null ? _struct3 : struct = fn();\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nfunction omit(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = { ...schema\n  };\n\n  for (const key of keys) {\n    delete subschema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nfunction partial(struct) {\n  const schema = struct instanceof Struct ? { ...struct.schema\n  } : { ...struct\n  };\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n\n  return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nfunction pick(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = {};\n\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nfunction struct(name, validator) {\n  console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n  return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return define('date', value => {\n    return value instanceof Date && !isNaN(value.getTime()) || \"Expected a valid `Date` object, but received: \" + print(value);\n  });\n}\nfunction enums(values) {\n  const schema = {};\n  const description = values.map(v => print(v)).join();\n\n  for (const key of values) {\n    schema[key] = key;\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n\n    validator(value) {\n      return values.includes(value) || \"Expected one of `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a function.\n */\n\nfunction func() {\n  return define('func', value => {\n    return typeof value === 'function' || \"Expected a function, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nfunction instance(Class) {\n  return define('instance', value => {\n    return value instanceof Class || \"Expected a `\" + Class.name + \"` instance, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an integer.\n */\n\nfunction integer() {\n  return define('integer', value => {\n    return typeof value === 'number' && !isNaN(value) && Number.isInteger(value) || \"Expected an integer, but received: \" + print(value);\n  });\n}\nfunction intersection(Structs) {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx);\n      }\n    },\n\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx);\n      }\n    },\n\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx);\n      }\n    }\n\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\nfunction map(Key, Value) {\n  return new Struct({\n    type: 'map',\n    schema: null,\n\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Map || \"Expected a `Map` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that no value ever passes validation.\n */\n\nfunction never() {\n  return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\nfunction object(schema) {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          yield [key, value[key], schema[key]];\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    },\n\n    coercer(value) {\n      return isObject(value) ? { ...value\n      } : value;\n    }\n\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nfunction record(Key, Value) {\n  return new Struct({\n    type: 'record',\n    schema: null,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k];\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nfunction regexp() {\n  return define('regexp', value => {\n    return value instanceof RegExp;\n  });\n}\nfunction set(Element) {\n  return new Struct({\n    type: 'set',\n    schema: null,\n\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Set || \"Expected a `Set` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length);\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\nfunction union(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction defaulted(struct, fallback, options = {}) {\n  return coerce(struct, unknown(), x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x\n      };\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction trimmed(struct) {\n  return coerce(struct, string(), x => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\n\nfunction empty(struct) {\n  const expected = \"Expected an empty \" + struct.type;\n  return refine(struct, 'empty', value => {\n    if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return size === 0 || expected + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return length === 0 || expected + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\n\nfunction max(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'max', value => {\n    return exclusive ? value < threshold : value <= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\n\nfunction min(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'min', value => {\n    return exclusive ? value > threshold : value >= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\n\nfunction pattern(struct, regexp) {\n  return refine(struct, 'pattern', value => {\n    return regexp.test(value) || \"Expected a \" + struct.type + \" matching `/\" + regexp.source + \"/` but received \\\"\" + value + \"\\\"\";\n  });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\n\nfunction size(struct, min, max = min) {\n  const expected = \"Expected a \" + struct.type;\n  const of = min === max ? \"of `\" + min + \"`\" : \"between `\" + min + \"` and `\" + max + \"`\";\n  return refine(struct, 'size', value => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return min <= value && value <= max || expected + \" \" + of + \" but received `\" + value + \"`\";\n    } else if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return min <= size && size <= max || expected + \" with a size \" + of + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return min <= length && length <= max || expected + \" with a length \" + of + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\n\nfunction refine(struct, name, refiner) {\n  return new Struct({ ...struct,\n\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n\n      for (const failure of failures) {\n        yield { ...failure,\n          refinement: name\n        };\n      }\n    }\n\n  });\n}\n\nexport { Struct, StructError, any, array, assert, assign, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.es.js.map\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _eventemitter = require(\"eventemitter3\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n// @ts-ignore\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n  var _super = _createSuper(CommonClient);\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n    var _a$autoconnect = _a.autoconnect,\n      autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n      _a$reconnect = _a.reconnect,\n      reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n      _a$reconnect_interval = _a.reconnect_interval,\n      reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n      _a$max_reconnects = _a.max_reconnects,\n      max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n      rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n        var rpc_id = _this2.generate_request_id(method, params);\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n              case 2:\n                resp = _context.sent;\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n                throw new Error(\"authentication failed\");\n              case 5:\n                return _context.abrupt(\"return\", resp);\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n              case 3:\n                result = _context3.sent;\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n              case 6:\n                return _context3.abrupt(\"return\", result);\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n              case 3:\n                result = _context4.sent;\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n              case 6:\n                return _context4.abrupt(\"return\", result);\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n        _this4.emit(\"open\");\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        }\n        // check if any listeners are attached and forward event\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else\n            // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            }\n          // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n          return;\n        }\n        // reject early since server's response is invalid\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n          reason = _ref2.reason;\n        if (_this4.ready)\n          // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\nexports[\"default\"] = CommonClient;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _eventemitter = require(\"eventemitter3\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n  var _super = _createSuper(WebSocketBrowserImpl);\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes } from './utils.js';\nimport { wNAF, validateBasic } from './curve.js';\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    _parseInt(data) {\n        const { Err: E } = DER;\n        if (data.length < 2 || data[0] !== 0x02)\n            throw new E('Invalid signature integer tag');\n        const len = data[1];\n        const res = data.subarray(2, len + 2);\n        if (!len || res.length !== len)\n            throw new E('Invalid signature integer: wrong length');\n        // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n        // since we always use positive integers here. It must always be empty:\n        // - add zero byte if exists\n        // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n        if (res[0] & 0b10000000)\n            throw new E('Invalid signature integer: negative');\n        if (res[0] === 0x00 && !(res[1] & 0b10000000))\n            throw new E('Invalid signature integer: unnecessary leading zero');\n        return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        if (!(data instanceof Uint8Array))\n            throw new Error('ui8a expected');\n        let l = data.length;\n        if (l < 2 || data[0] != 0x30)\n            throw new E('Invalid signature tag');\n        if (data[1] !== l - 2)\n            throw new E('Invalid signature: incorrect length');\n        const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n        const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n        if (rBytesLeft.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r, s };\n    },\n    hexFromSig(sig) {\n        // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n        const slice = (s) => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n        const h = (num) => {\n            const hex = num.toString(16);\n            return hex.length & 1 ? `0${hex}` : hex;\n        };\n        const s = slice(h(sig.s));\n        const r = slice(h(sig.r));\n        const shl = s.length / 2;\n        const rhl = r.length / 2;\n        const sl = h(shl);\n        const rl = h(rhl);\n        return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n    }\n    function assertGE(num) {\n        if (!isWithinCurveOrder(num))\n            throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (key instanceof Uint8Array)\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, n); // disabled by default, enabled for BLS\n        assertGE(num); // num in range [1..N-1]\n        return num;\n    }\n    const pointPrecomputes = new Map();\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            if (this.is0()) {\n                // (0, 1, 0) aka ZERO is invalid in most contexts.\n                // In BLS, ZERO can be serialized, so we allow it.\n                // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n                if (CURVE.allowInfinityPoint && !Fp.is0(this.py))\n                    return;\n                throw new Error('bad point: ZERO');\n            }\n            // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n            const { x, y } = this.toAffine();\n            // Check if x, y are valid field elements\n            if (!Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('bad point: x or y not FE');\n            const left = Fp.sqr(y); // y²\n            const right = weierstrassEquation(x); // x³ + ax + b\n            if (!Fp.eql(left, right))\n                throw new Error('bad point: equation left != right');\n            if (!this.isTorsionFree())\n                throw new Error('bad point: not in prime-order subgroup');\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, (comp) => {\n                const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n                return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n            });\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(n) {\n            const I = Point.ZERO;\n            if (n === _0n)\n                return I;\n            assertGE(n); // Will throw on 0\n            if (n === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, n);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            assertGE(scalar);\n            let n = scalar;\n            let point, fake; // Fake point is used to const-time mult\n            const { endo } = CURVE;\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(n);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            const { px: x, py: y, pz: z } = this;\n            const is0 = this.is0();\n            // If invZ was 0, we return zero point. However we still want to execute\n            // all operations, so we replace invZ with a random number, 1.\n            if (iz == null)\n                iz = is0 ? Fp.ONE : Fp.inv(z);\n            const ax = Fp.mul(x, iz);\n            const ay = Fp.mul(y, iz);\n            const zz = Fp.mul(z, iz);\n            if (is0)\n                return { x: Fp.ZERO, y: Fp.ZERO };\n            if (!Fp.eql(zz, Fp.ONE))\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function isValidFieldElement(num) {\n        return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n    }\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!isValidFieldElement(x))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            // can use assertGE here\n            if (!isWithinCurveOrder(this.r))\n                throw new Error('r must be 0 < r < CURVE.n');\n            if (!isWithinCurveOrder(this.s))\n                throw new Error('s must be 0 < s < CURVE.n');\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = item instanceof Uint8Array;\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        if (typeof num !== 'bigint')\n            throw new Error('bigint expected');\n        if (!(_0n <= num && num < ORDER_MASK))\n            throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || sg instanceof Uint8Array) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\nexport const secp256k1 = createCurve({\n    a: BigInt(0),\n    b: BigInt(7),\n    Fp,\n    n: secp256k1N,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1),\n    lowS: true,\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    if (!fe(x))\n        throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!fe(r))\n            return false;\n        const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!ge(s))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","import { Buffer } from 'buffer';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { serialize, deserialize, deserializeUnchecked } from 'borsh';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { blob } from '@solana/buffer-layout';\nimport { toBigIntLE, toBufferLE } from 'bigint-buffer';\nimport { coerce, instance, string, tuple, literal, unknown, type, number, array, nullable, optional, boolean, record, union, create, any, assert as assert$1 } from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client';\nimport createRpc from 'rpc-websockets/dist/lib/client/websocket.browser';\nimport { keccak_256 } from '@noble/hashes/sha3';\nimport { secp256k1 } from '@noble/curves/secp256k1';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\n\n/**\n * Ed25519 Keypair\n */\n\nconst generatePrivateKey = ed25519.utils.randomPrivateKey;\nconst generateKeypair = () => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey\n  };\n};\nconst getPublicKey = ed25519.getPublicKey;\nfunction isOnCurve(publicKey) {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nconst sign = (message, secretKey) => ed25519.sign(message, secretKey.slice(0, 32));\nconst verify = ed25519.verify;\n\nconst toBuffer = arr => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n\n// Class wrapping a plain object\nclass Struct {\n  constructor(properties) {\n    Object.assign(this, properties);\n  }\n  encode() {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n  static decode(data) {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n  static decodeUnchecked(data) {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nclass Enum extends Struct {\n  constructor(properties) {\n    super(properties);\n    this.enum = '';\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\nconst SOLANA_SCHEMA = new Map();\n\nvar _class;\nlet _Symbol$toStringTag;\n\n/**\n * Maximum length of derived pubkey seed\n */\nconst MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nconst PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\n\n/**\n * JSON object representation of PublicKey class\n */\n\nfunction isPublicKeyData(value) {\n  return value._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\n_Symbol$toStringTag = Symbol.toStringTag;\nclass PublicKey extends Struct {\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value) {\n    super({});\n    /** @internal */\n    this._bn = void 0;\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique() {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey) {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58() {\n    return bs58.encode(this.toBytes());\n  }\n  toJSON() {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes() {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer() {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n  get [_Symbol$toStringTag]() {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString() {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(fromPublicKey, seed, programId) {\n    const buffer = Buffer.concat([fromPublicKey.toBuffer(), Buffer.from(seed), programId.toBuffer()]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(seeds, programId) {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([buffer, programId.toBuffer(), Buffer.from('ProgramDerivedAddress')]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(seeds, programId) {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(seeds, programId) {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(seeds, programId) {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData) {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n_class = PublicKey;\nPublicKey.default = new _class('11111111111111111111111111111111');\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']]\n});\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nclass Account {\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey) {\n    /** @internal */\n    this._publicKey = void 0;\n    /** @internal */\n    this._secretKey = void 0;\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey() {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey() {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n\nconst BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey('BPFLoader1111111111111111111111111111111111');\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nconst PACKET_DATA_SIZE = 1280 - 40 - 8;\nconst VERSION_PREFIX_MASK = 0x7f;\nconst SIGNATURE_LENGTH_IN_BYTES = 64;\n\nclass TransactionExpiredBlockheightExceededError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredBlockheightExceededError.prototype, 'name', {\n  value: 'TransactionExpiredBlockheightExceededError'\n});\nclass TransactionExpiredTimeoutError extends Error {\n  constructor(signature, timeoutSeconds) {\n    super(`Transaction was not confirmed in ${timeoutSeconds.toFixed(2)} seconds. It is ` + 'unknown if it succeeded or failed. Check signature ' + `${signature} using the Solana Explorer or CLI tools.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError'\n});\nclass TransactionExpiredNonceInvalidError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError'\n});\n\nclass MessageAccountKeys {\n  constructor(staticAccountKeys, accountKeysFromLookups) {\n    this.staticAccountKeys = void 0;\n    this.accountKeysFromLookups = void 0;\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n  keySegments() {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n  get(index) {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n  get length() {\n    return this.keySegments().flat().length;\n  }\n  compileInstructions(instructions) {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n    const keyIndexMap = new Map();\n    this.keySegments().flat().forEach((key, index) => {\n      keyIndexMap.set(key.toBase58(), index);\n    });\n    const findKeyIndex = key => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined) throw new Error('Encountered an unknown instruction account key during compilation');\n      return keyIndex;\n    };\n    return instructions.map(instruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta => findKeyIndex(meta.pubkey)),\n        data: instruction.data\n      };\n    });\n  }\n}\n\n/**\n * Layout for a public key\n */\nconst publicKey = (property = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nconst signature = (property = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n/**\n * Layout for a Rust String type\n */\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n  const rslShim = rsl;\n  rslShim.decode = (b, offset) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n  rslShim.encode = (str, b, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, b, offset);\n  };\n  rslShim.alloc = str => {\n    return BufferLayout.u32().span + BufferLayout.u32().span + Buffer.from(str, 'utf8').length;\n  };\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nconst authorized = (property = 'authorized') => {\n  return BufferLayout.struct([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nconst lockup = (property = 'lockup') => {\n  return BufferLayout.struct([BufferLayout.ns64('unixTimestamp'), BufferLayout.ns64('epoch'), publicKey('custodian')], property);\n};\n\n/**\n *  Layout for a VoteInit object\n */\nconst voteInit = (property = 'voteInit') => {\n  return BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedVoter'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission')], property);\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nconst voteAuthorizeWithSeedArgs = (property = 'voteAuthorizeWithSeedArgs') => {\n  return BufferLayout.struct([BufferLayout.u32('voteAuthorizationType'), publicKey('currentAuthorityDerivedKeyOwnerPubkey'), rustString('currentAuthorityDerivedKeySeed'), publicKey('newAuthorized')], property);\n};\nfunction getAlloc(type, fields) {\n  const getItemAlloc = item => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({\n        layout: item\n      }, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n  let alloc = 0;\n  type.layout.fields.forEach(item => {\n    alloc += getItemAlloc(item);\n  });\n  return alloc;\n}\n\nfunction decodeLength(bytes) {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift();\n    len |= (elem & 0x7f) << size * 7;\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\nfunction encodeLength(bytes, len) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\nclass CompiledKeys {\n  constructor(payer, keyMetaMap) {\n    this.payer = void 0;\n    this.keyMetaMap = void 0;\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n  static compile(instructions, payer) {\n    const keyMetaMap = new Map();\n    const getOrInsertDefault = pubkey => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n  getMessageComponents() {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n    const writableSigners = mapEntries.filter(([, meta]) => meta.isSigner && meta.isWritable);\n    const readonlySigners = mapEntries.filter(([, meta]) => meta.isSigner && !meta.isWritable);\n    const writableNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && meta.isWritable);\n    const readonlyNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && !meta.isWritable);\n    const header = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length\n    };\n\n    // sanity checks\n    {\n      assert(writableSigners.length > 0, 'Expected at least one writable signer key');\n      const [payerAddress] = writableSigners[0];\n      assert(payerAddress === this.payer.toBase58(), 'Expected first writable signer key to be the fee payer');\n    }\n    const staticAccountKeys = [...writableSigners.map(([address]) => new PublicKey(address)), ...readonlySigners.map(([address]) => new PublicKey(address)), ...writableNonSigners.map(([address]) => new PublicKey(address)), ...readonlyNonSigners.map(([address]) => new PublicKey(address))];\n    return [header, staticAccountKeys];\n  }\n  extractTableLookup(lookupTable) {\n    const [writableIndexes, drainedWritableKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable);\n    const [readonlyIndexes, drainedReadonlyKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable);\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n    return [{\n      accountKey: lookupTable.key,\n      writableIndexes,\n      readonlyIndexes\n    }, {\n      writable: drainedWritableKeys,\n      readonly: drainedReadonlyKeys\n    }];\n  }\n\n  /** @internal */\n  drainKeysFoundInLookupTable(lookupTableEntries, keyMetaFilter) {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry => entry.equals(key));\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\n\n/**\n * Message constructor arguments\n */\n\n/**\n * List of instructions to be processed atomically\n */\nclass Message {\n  constructor(args) {\n    this.header = void 0;\n    this.accountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.instructions = void 0;\n    this.indexToProgramIds = new Map();\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix => this.indexToProgramIds.set(ix.programIdIndex, this.accountKeys[ix.programIdIndex]));\n  }\n  get version() {\n    return 'legacy';\n  }\n  get staticAccountKeys() {\n    return this.accountKeys;\n  }\n  get compiledInstructions() {\n    return this.instructions.map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accountKeyIndexes: ix.accounts,\n      data: bs58.decode(ix.data)\n    }));\n  }\n  get addressTableLookups() {\n    return [];\n  }\n  getAccountKeys() {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accounts: ix.accountKeyIndexes,\n      data: bs58.encode(ix.data)\n    }));\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions\n    });\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  isProgramId(index) {\n    return this.indexToProgramIds.has(index);\n  }\n  programIds() {\n    return [...this.indexToProgramIds.values()];\n  }\n  nonProgramIds() {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n  serialize() {\n    const numKeys = this.accountKeys.length;\n    let keyCount = [];\n    encodeLength(keyCount, numKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        accounts,\n        programIdIndex\n      } = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n      let keyIndicesCount = [];\n      encodeLength(keyIndicesCount, accounts.length);\n      let dataCount = [];\n      encodeLength(dataCount, data.length);\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data\n      };\n    });\n    let instructionCount = [];\n    encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(instruction.keyIndicesCount.length, 'keyIndicesCount'), BufferLayout.seq(BufferLayout.u8('keyIndex'), instruction.keyIndices.length, 'keyIndices'), BufferLayout.blob(instruction.dataLength.length, 'dataLength'), BufferLayout.seq(BufferLayout.u8('userdatum'), instruction.data.length, 'data')]);\n      const length = instructionLayout.encode(instruction, instructionBuffer, instructionBufferLength);\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n    const signDataLayout = BufferLayout.struct([BufferLayout.blob(1, 'numRequiredSignatures'), BufferLayout.blob(1, 'numReadonlySignedAccounts'), BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'), BufferLayout.blob(keyCount.length, 'keyCount'), BufferLayout.seq(publicKey('key'), numKeys, 'keys'), publicKey('recentBlockhash')]);\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([this.header.numReadonlySignedAccounts]),\n      numReadonlyUnsignedAccounts: Buffer.from([this.header.numReadonlyUnsignedAccounts]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash)\n    };\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const numRequiredSignatures = byteArray.shift();\n    if (numRequiredSignatures !== (numRequiredSignatures & VERSION_PREFIX_MASK)) {\n      throw new Error('Versioned messages must be deserialized with VersionedMessage.deserialize()');\n    }\n    const numReadonlySignedAccounts = byteArray.shift();\n    const numReadonlyUnsignedAccounts = byteArray.shift();\n    const accountCount = decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n    const instructionCount = decodeLength(byteArray);\n    let instructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift();\n      const accountCount = decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data\n      });\n    }\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions\n    };\n    return new Message(messageArgs);\n  }\n}\n\n/**\n * Message constructor arguments\n */\n\nclass MessageV0 {\n  constructor(args) {\n    this.header = void 0;\n    this.staticAccountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.compiledInstructions = void 0;\n    this.addressTableLookups = void 0;\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n  get version() {\n    return 0;\n  }\n  get numAccountKeysFromLookups() {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n  getAccountKeys(args) {\n    let accountKeysFromLookups;\n    if (args && 'accountKeysFromLookups' in args && args.accountKeysFromLookups) {\n      if (this.numAccountKeysFromLookups != args.accountKeysFromLookups.writable.length + args.accountKeysFromLookups.readonly.length) {\n        throw new Error('Failed to get account keys because of a mismatch in the number of account keys from lookups');\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (args && 'addressLookupTableAccounts' in args && args.addressLookupTableAccounts) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(args.addressLookupTableAccounts);\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error('Failed to get account keys because address table lookups were not resolved');\n    }\n    return new MessageAccountKeys(this.staticAccountKeys, accountKeysFromLookups);\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce((count, lookup) => count + lookup.writableIndexes.length, 0);\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  resolveAddressTableLookups(addressLookupTableAccounts) {\n    const accountKeysFromLookups = {\n      writable: [],\n      readonly: []\n    };\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account => account.key.equals(tableLookup.accountKey));\n      if (!tableAccount) {\n        throw new Error(`Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`);\n      }\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n    }\n    return accountKeysFromLookups;\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const addressTableLookups = new Array();\n    const accountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array()\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {\n          writable,\n          readonly\n        }] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys, accountKeysFromLookups);\n    const compiledInstructions = accountKeys.compileInstructions(args.instructions);\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n  serialize() {\n    const encodedStaticAccountKeysLength = Array();\n    encodeLength(encodedStaticAccountKeysLength, this.staticAccountKeys.length);\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array();\n    encodeLength(encodedInstructionsLength, this.compiledInstructions.length);\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array();\n    encodeLength(encodedAddressTableLookupsLength, this.addressTableLookups.length);\n    const messageLayout = BufferLayout.struct([BufferLayout.u8('prefix'), BufferLayout.struct([BufferLayout.u8('numRequiredSignatures'), BufferLayout.u8('numReadonlySignedAccounts'), BufferLayout.u8('numReadonlyUnsignedAccounts')], 'header'), BufferLayout.blob(encodedStaticAccountKeysLength.length, 'staticAccountKeysLength'), BufferLayout.seq(publicKey(), this.staticAccountKeys.length, 'staticAccountKeys'), publicKey('recentBlockhash'), BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'), BufferLayout.blob(serializedInstructions.length, 'serializedInstructions'), BufferLayout.blob(encodedAddressTableLookupsLength.length, 'addressTableLookupsLength'), BufferLayout.blob(serializedAddressTableLookups.length, 'serializedAddressTableLookups')]);\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode({\n      prefix: MESSAGE_VERSION_0_PREFIX,\n      header: this.header,\n      staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n      staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n      instructionsLength: new Uint8Array(encodedInstructionsLength),\n      serializedInstructions,\n      addressTableLookupsLength: new Uint8Array(encodedAddressTableLookupsLength),\n      serializedAddressTableLookups\n    }, serializedMessage);\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n  serializeInstructions() {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array();\n      encodeLength(encodedAccountKeyIndexesLength, instruction.accountKeyIndexes.length);\n      const encodedDataLength = Array();\n      encodeLength(encodedDataLength, instruction.data.length);\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(encodedAccountKeyIndexesLength.length, 'encodedAccountKeyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), instruction.accountKeyIndexes.length, 'accountKeyIndexes'), BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'), BufferLayout.blob(instruction.data.length, 'data')]);\n      serializedLength += instructionLayout.encode({\n        programIdIndex: instruction.programIdIndex,\n        encodedAccountKeyIndexesLength: new Uint8Array(encodedAccountKeyIndexesLength),\n        accountKeyIndexes: instruction.accountKeyIndexes,\n        encodedDataLength: new Uint8Array(encodedDataLength),\n        data: instruction.data\n      }, serializedInstructions, serializedLength);\n    }\n    return serializedInstructions.slice(0, serializedLength);\n  }\n  serializeAddressTableLookups() {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array();\n      encodeLength(encodedWritableIndexesLength, lookup.writableIndexes.length);\n      const encodedReadonlyIndexesLength = Array();\n      encodeLength(encodedReadonlyIndexesLength, lookup.readonlyIndexes.length);\n      const addressTableLookupLayout = BufferLayout.struct([publicKey('accountKey'), BufferLayout.blob(encodedWritableIndexesLength.length, 'encodedWritableIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.writableIndexes.length, 'writableIndexes'), BufferLayout.blob(encodedReadonlyIndexesLength.length, 'encodedReadonlyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.readonlyIndexes.length, 'readonlyIndexes')]);\n      serializedLength += addressTableLookupLayout.encode({\n        accountKey: lookup.accountKey.toBytes(),\n        encodedWritableIndexesLength: new Uint8Array(encodedWritableIndexesLength),\n        writableIndexes: lookup.writableIndexes,\n        encodedReadonlyIndexesLength: new Uint8Array(encodedReadonlyIndexesLength),\n        readonlyIndexes: lookup.readonlyIndexes\n      }, serializedAddressTableLookups, serializedLength);\n    }\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n  static deserialize(serializedMessage) {\n    let byteArray = [...serializedMessage];\n    const prefix = byteArray.shift();\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(prefix !== maskedPrefix, `Expected versioned message but received legacy message`);\n    const version = maskedPrefix;\n    assert(version === 0, `Expected versioned message with version 0 but found version ${version}`);\n    const header = {\n      numRequiredSignatures: byteArray.shift(),\n      numReadonlySignedAccounts: byteArray.shift(),\n      numReadonlyUnsignedAccounts: byteArray.shift()\n    };\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)));\n    }\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n    const instructionCount = decodeLength(byteArray);\n    const compiledInstructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift();\n      const accountKeyIndexesLength = decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data\n      });\n    }\n    const addressTableLookupsCount = decodeLength(byteArray);\n    const addressTableLookups = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes\n      });\n    }\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n}\n\n// eslint-disable-next-line no-redeclare\nconst VersionedMessage = {\n  deserializeMessageVersion(serializedMessage) {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n  deserialize: serializedMessage => {\n    const version = VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(`Transaction message version ${version} deserialization is not supported`);\n    }\n  }\n};\n\n/**\n * Transaction signature as base-58 encoded string\n */\n\nlet TransactionStatus = /*#__PURE__*/function (TransactionStatus) {\n  TransactionStatus[TransactionStatus[\"BLOCKHEIGHT_EXCEEDED\"] = 0] = \"BLOCKHEIGHT_EXCEEDED\";\n  TransactionStatus[TransactionStatus[\"PROCESSED\"] = 1] = \"PROCESSED\";\n  TransactionStatus[TransactionStatus[\"TIMED_OUT\"] = 2] = \"TIMED_OUT\";\n  TransactionStatus[TransactionStatus[\"NONCE_INVALID\"] = 3] = \"NONCE_INVALID\";\n  return TransactionStatus;\n}({});\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\n\n/**\n * Configuration object for Transaction.serialize()\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction Instruction class\n */\nclass TransactionInstruction {\n  constructor(opts) {\n    /**\n     * Public keys to include in this transaction\n     * Boolean represents whether this pubkey needs to sign the transaction\n     */\n    this.keys = void 0;\n    /**\n     * Program Id to execute\n     */\n    this.programId = void 0;\n    /**\n     * Program input\n     */\n    this.data = Buffer.alloc(0);\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      keys: this.keys.map(({\n        pubkey,\n        isSigner,\n        isWritable\n      }) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data]\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\n/**\n * Use these options to construct a durable nonce transaction.\n */\n/**\n * Nonce information to be used to build an offline Transaction.\n */\n/**\n * @internal\n */\n/**\n * Transaction class\n */\nclass Transaction {\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature() {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n\n  // Construct a transaction using a durable nonce\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts) {\n    /**\n     * Signatures for the transaction.  Typically created by invoking the\n     * `sign()` method\n     */\n    this.signatures = [];\n    this.feePayer = void 0;\n    /**\n     * The instructions to atomically execute\n     */\n    this.instructions = [];\n    /**\n     * A recent transaction id. Must be populated by the caller\n     */\n    this.recentBlockhash = void 0;\n    /**\n     * the last block chain can advance to before tx is declared expired\n     * */\n    this.lastValidBlockHeight = void 0;\n    /**\n     * Optional Nonce information. If populated, transaction will use a durable\n     * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n     */\n    this.nonceInfo = void 0;\n    /**\n     * If this is a nonce transaction this represents the minimum slot from which\n     * to evaluate if the nonce has advanced when attempting to confirm the\n     * transaction. This protects against a case where the transaction confirmation\n     * logic loads the nonce account from an old slot and assumes the mismatch in\n     * nonce value implies that the nonce has been advanced.\n     */\n    this.minNonceContextSlot = void 0;\n    /**\n     * @internal\n     */\n    this._message = void 0;\n    /**\n     * @internal\n     */\n    this._json = void 0;\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {\n        minContextSlot,\n        nonceInfo\n      } = opts;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {\n        blockhash,\n        lastValidBlockHeight\n      } = opts;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {\n        recentBlockhash,\n        nonceInfo\n      } = opts;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo ? {\n        nonce: this.nonceInfo.nonce,\n        nonceInstruction: this.nonceInfo.nonceInstruction.toJSON()\n      } : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({\n        publicKey\n      }) => {\n        return publicKey.toJSON();\n      })\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(...items) {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n    items.forEach(item => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage() {\n    if (this._message && JSON.stringify(this.toJSON()) === JSON.stringify(this._json)) {\n      return this._message;\n    }\n    let recentBlockhash;\n    let instructions;\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n    let feePayer;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(`Transaction instruction index ${i} has undefined program id`);\n      }\n    }\n    const programIds = [];\n    const accountMetas = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({\n          ...accountMeta\n        });\n      });\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable = uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner = uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower'\n      };\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn('Transaction references a signature that is unnecessary, ' + 'only the fee payer and instruction signer accounts should sign a transaction. ' + 'This behavior is deprecated and will throw an error in the next major version release.');\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys = [];\n    const unsignedKeys = [];\n    uniqueMetas.forEach(({\n      pubkey,\n      isSigner,\n      isWritable\n    }) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions = instructions.map(instruction => {\n      const {\n        data,\n        programId\n      } = instruction;\n      return {\n        programIdIndex: accountKeys.indexOf(programId.toString()),\n        accounts: instruction.keys.map(meta => accountKeys.indexOf(meta.pubkey.toString())),\n        data: bs58.encode(data)\n      };\n    });\n    compiledInstructions.forEach(instruction => {\n      assert(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => assert(keyIndex >= 0));\n    });\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile() {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(0, message.header.numRequiredSignatures);\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n      if (valid) return message;\n    }\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage() {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection) {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n    const seen = new Set();\n    this.signatures = signers.filter(publicKey => {\n      const key = publicKey.toString();\n      if (seen.has(key)) {\n        return false;\n      } else {\n        seen.add(key);\n        return true;\n      }\n    }).map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey\n    }));\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message, ...signers) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey, signature) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey, signature) {\n    assert(signature.length === 64);\n    const index = this.signatures.findIndex(sigpair => pubkey.equals(sigpair.publicKey));\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures) {\n    return this._verifySignatures(this.serializeMessage(), requireAllSignatures === undefined ? true : requireAllSignatures);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData, requireAllSignatures) {\n    for (const {\n      signature,\n      publicKey\n    } of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config) {\n    const {\n      requireAllSignatures,\n      verifySignatures\n    } = Object.assign({\n      requireAllSignatures: true,\n      verifySignatures: true\n    }, config);\n    const signData = this.serializeMessage();\n    if (verifySignatures && !this._verifySignatures(signData, requireAllSignatures)) {\n      throw new Error('Signature verification failed');\n    }\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData) {\n    const {\n      signatures\n    } = this;\n    const signatureCount = [];\n    encodeLength(signatureCount, signatures.length);\n    const transactionLength = signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    assert(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({\n      signature\n    }, index) => {\n      if (signature !== null) {\n        assert(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(wireTransaction, signatureCount.length + index * 64);\n      }\n    });\n    signData.copy(wireTransaction, signatureCount.length + signatures.length * 64);\n    assert(wireTransaction.length <= PACKET_DATA_SIZE, `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`);\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const signatureCount = decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(message, signatures = []) {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature: signature == bs58.encode(DEFAULT_SIGNATURE) ? null : bs58.decode(signature),\n        publicKey: message.accountKeys[index]\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner: transaction.signatures.some(keyObj => keyObj.publicKey.toString() === pubkey.toString()) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account)\n        };\n      });\n      transaction.instructions.push(new TransactionInstruction({\n        keys,\n        programId: message.accountKeys[instruction.programIdIndex],\n        data: bs58.decode(instruction.data)\n      }));\n    });\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n    return transaction;\n  }\n}\n\nclass TransactionMessage {\n  constructor(args) {\n    this.payerKey = void 0;\n    this.instructions = void 0;\n    this.recentBlockhash = void 0;\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n  static decompile(message, args) {\n    const {\n      header,\n      compiledInstructions,\n      recentBlockhash\n    } = message;\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts\n    } = header;\n    const numWritableSignedAccounts = numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n    const numWritableUnsignedAccounts = message.staticAccountKeys.length - numRequiredSignatures - numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error('Failed to decompile message because no account keys were found');\n    }\n    const instructions = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys = [];\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(`Failed to find key for account key index ${keyIndex}`);\n        }\n        const isSigner = keyIndex < numRequiredSignatures;\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable = keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable = keyIndex - accountKeys.staticAccountKeys.length <\n          // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n          accountKeys.accountKeysFromLookups.writable.length;\n        }\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable\n        });\n      }\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(`Failed to find program id for program id index ${compiledIx.programIdIndex}`);\n      }\n      instructions.push(new TransactionInstruction({\n        programId,\n        data: toBuffer(compiledIx.data),\n        keys\n      }));\n    }\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash\n    });\n  }\n  compileToLegacyMessage() {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions\n    });\n  }\n  compileToV0Message(addressLookupTableAccounts) {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts\n    });\n  }\n}\n\n/**\n * Versioned transaction class\n */\nclass VersionedTransaction {\n  get version() {\n    return this.message.version;\n  }\n  constructor(message, signatures) {\n    this.signatures = void 0;\n    this.message = void 0;\n    if (signatures !== undefined) {\n      assert(signatures.length === message.header.numRequiredSignatures, 'Expected signatures length to be equal to the number of required signatures');\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n  serialize() {\n    const serializedMessage = this.message.serialize();\n    const encodedSignaturesLength = Array();\n    encodeLength(encodedSignaturesLength, this.signatures.length);\n    const transactionLayout = BufferLayout.struct([BufferLayout.blob(encodedSignaturesLength.length, 'encodedSignaturesLength'), BufferLayout.seq(signature(), this.signatures.length, 'signatures'), BufferLayout.blob(serializedMessage.length, 'serializedMessage')]);\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode({\n      encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n      signatures: this.signatures,\n      serializedMessage\n    }, serializedTransaction);\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n  static deserialize(serializedTransaction) {\n    let byteArray = [...serializedTransaction];\n    const signatures = [];\n    const signaturesLength = decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(new Uint8Array(byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES)));\n    }\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n  sign(signers) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(signer.publicKey));\n      assert(signerIndex >= 0, `Cannot sign with non signer key ${signer.publicKey.toBase58()}`);\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n  addSignature(publicKey, signature) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(publicKey));\n    assert(signerIndex >= 0, `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`);\n    this.signatures[signerIndex] = signature;\n  }\n}\n\n// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nconst NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nconst DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nconst NUM_SLOTS_PER_SECOND = NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nconst MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n\nconst SYSVAR_CLOCK_PUBKEY = new PublicKey('SysvarC1ock11111111111111111111111111111111');\nconst SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey('SysvarEpochSchedu1e111111111111111111111111');\nconst SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey('Sysvar1nstructions1111111111111111111111111');\nconst SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey('SysvarRecentB1ockHashes11111111111111111111');\nconst SYSVAR_RENT_PUBKEY = new PublicKey('SysvarRent111111111111111111111111111111111');\nconst SYSVAR_REWARDS_PUBKEY = new PublicKey('SysvarRewards111111111111111111111111111111');\nconst SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey('SysvarS1otHashes111111111111111111111111111');\nconst SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey('SysvarS1otHistory11111111111111111111111111');\nconst SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey('SysvarStakeHistory1111111111111111111111111');\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmTransaction(connection, transaction, signers, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendTransaction(transaction, signers, sendOptions);\n  let status;\n  if (transaction.recentBlockhash != null && transaction.lastValidBlockHeight != null) {\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      signature: signature,\n      blockhash: transaction.recentBlockhash,\n      lastValidBlockHeight: transaction.lastValidBlockHeight\n    }, options && options.commitment)).value;\n  } else if (transaction.minNonceContextSlot != null && transaction.nonceInfo != null) {\n    const {\n      nonceInstruction\n    } = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      minContextSlot: transaction.minNonceContextSlot,\n      nonceAccountPubkey,\n      nonceValue: transaction.nonceInfo.nonce,\n      signature\n    }, options && options.commitment)).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn('sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' + 'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' + 'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.');\n    }\n    status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n  }\n  if (status.err) {\n    throw new Error(`Transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n// zzz\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * @internal\n */\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nfunction encodeData(type, fields) {\n  const allocLength = type.layout.span >= 0 ? type.layout.span : getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({\n    instruction: type.index\n  }, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nfunction decodeData$1(type, buffer) {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (data.instruction !== type.index) {\n    throw new Error(`invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`);\n  }\n  return data;\n}\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nconst FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct([BufferLayout.u32('version'), BufferLayout.u32('state'), publicKey('authorizedPubkey'), publicKey('nonce'), BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator')]);\nconst NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\n\n/**\n * NonceAccount class\n */\nclass NonceAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.authorizedPubkey = void 0;\n    this.nonce = void 0;\n    this.feeCalculator = void 0;\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(buffer) {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator\n    });\n  }\n}\n\nconst encodeDecode = layout => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {\n    decode,\n    encode\n  };\n};\nconst bigInt = length => property => {\n  const layout = blob(length, property);\n  const {\n    encode,\n    decode\n  } = encodeDecode(layout);\n  const bigIntLayout = layout;\n  bigIntLayout.decode = (buffer, offset) => {\n    const src = decode(buffer, offset);\n    return toBigIntLE(Buffer.from(src));\n  };\n  bigIntLayout.encode = (bigInt, buffer, offset) => {\n    const src = toBufferLE(bigInt, length);\n    return encode(src, buffer, offset);\n  };\n  return bigIntLayout;\n};\nconst u64 = bigInt(8);\n\n/**\n * Create account system transaction params\n */\n\n/**\n * Transfer system transaction params\n */\n\n/**\n * Assign system transaction params\n */\n\n/**\n * Create account with seed system transaction params\n */\n\n/**\n * Create nonce account system transaction params\n */\n\n/**\n * Create nonce account with seed system transaction params\n */\n\n/**\n * Initialize nonce account system instruction params\n */\n\n/**\n * Advance nonce account system instruction params\n */\n\n/**\n * Withdraw nonce account system transaction params\n */\n\n/**\n * Authorize nonce account system transaction params\n */\n\n/**\n * Allocate account system transaction params\n */\n\n/**\n * Allocate account with seed system transaction params\n */\n\n/**\n * Assign account with seed system transaction params\n */\n\n/**\n * Transfer with seed system transaction params\n */\n\n/** Decoded transfer system transaction instruction */\n\n/** Decoded transferWithSeed system transaction instruction */\n\n/**\n * System Instruction class\n */\nclass SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Create, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Transfer, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      space\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Allocate, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Assign, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      base,\n      seed,\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nconst SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('programId')])\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports')])\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('space')])\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), publicKey('programId')])\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports'), rustString('seed'), publicKey('programId')])\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nclass SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.newAccountPubkey,\n        isSigner: true,\n        isWritable: true\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports)\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    let keys = [{\n      pubkey: params.fromPubkey,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: params.newAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(params) {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    } else {\n      transaction.add(SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    }\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey\n    };\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer())\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {\n      lamports: params.lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nSystemProgram.programId = new PublicKey('11111111111111111111111111111111');\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nclass Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return 2 * (\n    // Every transaction requires two signatures (payer + program)\n    Math.ceil(dataLength / Loader.chunkSize) + 1 +\n    // Add one for Create transaction\n    1) // Add one for Finalize transaction\n    ;\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(connection, payer, program, programId, data) {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(data.length);\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(program.publicKey, 'confirmed');\n      let transaction = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.allocate({\n            accountPubkey: program.publicKey,\n            space: data.length\n          }));\n        }\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.assign({\n            accountPubkey: program.publicKey,\n            programId\n          }));\n        }\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.transfer({\n            fromPubkey: payer.publicKey,\n            toPubkey: program.publicKey,\n            lamports: balanceNeeded - programInfo.lamports\n          }));\n        }\n      } else {\n        transaction = new Transaction().add(SystemProgram.createAccount({\n          fromPubkey: payer.publicKey,\n          newAccountPubkey: program.publicKey,\n          lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n          space: data.length,\n          programId\n        }));\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed'\n        });\n      }\n    }\n    const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.u32('offset'), BufferLayout.u32('bytesLength'), BufferLayout.u32('bytesLengthPadding'), BufferLayout.seq(BufferLayout.u8('byte'), BufferLayout.offset(BufferLayout.u32(), -8), 'bytes')]);\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode({\n        instruction: 0,\n        // Load instruction\n        offset,\n        bytes: bytes,\n        bytesLength: 0,\n        bytesLengthPadding: 0\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }],\n        programId,\n        data\n      });\n      transactions.push(sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      }));\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 1 // Finalize instruction\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId,\n        data\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(transaction, [payer, program], {\n        preflightCommitment: deployCommitment\n      });\n      const {\n        context,\n        value\n      } = await connection.confirmTransaction({\n        signature: finalizeSignature,\n        lastValidBlockHeight: transaction.lastValidBlockHeight,\n        blockhash: transaction.recentBlockhash\n      }, deployCommitment);\n      if (value.err) {\n        throw new Error(`Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`);\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve => setTimeout(resolve, Math.round(MS_PER_SLOT / 2)));\n      }\n    }\n\n    // success\n    return true;\n  }\n}\nLoader.chunkSize = CHUNK_SIZE;\n\nconst BPF_LOADER_PROGRAM_ID = new PublicKey('BPFLoader2111111111111111111111111111111111');\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nclass BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(connection, payer, program, elf, loaderProgramId) {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nvar fastStableStringify = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n\nvar fastStableStringify$1 = /*@__PURE__*/getDefaultExportFromCjs(fastStableStringify);\n\nconst MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nclass EpochSchedule {\n  constructor(slotsPerEpoch, leaderScheduleSlotOffset, warmup, firstNormalEpoch, firstNormalSlot) {\n    /** The maximum number of slots in each epoch */\n    this.slotsPerEpoch = void 0;\n    /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n    this.leaderScheduleSlotOffset = void 0;\n    /** Indicates whether epochs start short and grow */\n    this.warmup = void 0;\n    /** The first epoch with `slotsPerEpoch` slots */\n    this.firstNormalEpoch = void 0;\n    /** The first slot of `firstNormalEpoch` */\n    this.firstNormalSlot = void 0;\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n  getEpoch(slot) {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n  getEpochAndSlotIndex(slot) {\n    if (slot < this.firstNormalSlot) {\n      const epoch = trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) - trailingZeros(MINIMUM_SLOT_PER_EPOCH) - 1;\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n  getFirstSlotInEpoch(epoch) {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (epoch - this.firstNormalEpoch) * this.slotsPerEpoch + this.firstNormalSlot;\n    }\n  }\n  getLastSlotInEpoch(epoch) {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n  getSlotsInEpoch(epoch) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n\nclass SendTransactionError extends Error {\n  constructor(message, logs) {\n    super(message);\n    this.logs = void 0;\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016\n};\nclass SolanaJSONRPCError extends Error {\n  constructor({\n    code,\n    message,\n    data\n  }, customMessage) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = void 0;\n    this.data = void 0;\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n\nvar fetchImpl = globalThis.fetch;\n\nclass RpcWebSocketClient extends RpcWebSocketCommonClient {\n  constructor(address, options, generate_request_id) {\n    const webSocketFactory = url => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = rpc.socket;\n      } else {\n        this.underlyingSocket = rpc;\n      }\n      return rpc;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n    this.underlyingSocket = void 0;\n  }\n  call(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(new Error('Tried to call a JSON-RPC method `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n  notify(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(new Error('Tried to send a JSON-RPC notification `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n}\n\n/**\n * @internal\n */\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nfunction decodeData(type, data) {\n  let decoded;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(`invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`);\n  }\n  return decoded;\n}\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\nclass AddressLookupTableAccount {\n  constructor(args) {\n    this.key = void 0;\n    this.state = void 0;\n    this.key = args.key;\n    this.state = args.state;\n  }\n  isActive() {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n  static deserialize(accountData) {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {\n      addresses\n    } = BufferLayout.struct([BufferLayout.seq(publicKey(), numSerializedAddresses, 'addresses')]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority: meta.authority.length !== 0 ? new PublicKey(meta.authority[0]) : undefined,\n      addresses: addresses.map(address => new PublicKey(address))\n    };\n  }\n}\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct([BufferLayout.u32('typeIndex'), u64('deactivationSlot'), BufferLayout.nu64('lastExtendedSlot'), BufferLayout.u8('lastExtendedStartIndex'), BufferLayout.u8(),\n  // option\n  BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u8(), -1), 'authority')])\n};\n\nconst URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\nfunction makeWebsocketUrl(endpoint) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [_,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  hostish, portWithColon, rest] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort = portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n\nconst PublicKeyFromString = coerce(instance(PublicKey), string(), value => new PublicKey(value));\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\nconst BufferFromRawAccountData = coerce(instance(Buffer), RawAccountDataResult, value => Buffer.from(value[0], 'base64'));\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nconst BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\n\n/** @internal */\n/** @internal */\n/** @internal */\n/** @internal */\n\n/** @internal */\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\n\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\n\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\n\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\n\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\n\n/**\n * @internal\n */\n\n/**\n * Extra contextual information for RPC responses\n */\n\n/**\n * Options for sending transactions\n */\n\n/**\n * Options for confirming transactions\n */\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\n\n/**\n * Options for getSignaturesForAddress\n */\n\n/**\n * RPC Response with extra contextual information\n */\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\n\n/**\n * This type represents all transaction confirmation strategies\n */\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig(commitmentOrConfig) {\n  let commitment;\n  let config;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {\n      commitment: specifiedCommitment,\n      ...specifiedConfig\n    } = commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {\n    commitment,\n    config\n  };\n}\n\n/**\n * @internal\n */\nfunction createRpcResult(result) {\n  return union([type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    result\n  }), type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    error: type({\n      code: unknown(),\n      message: string(),\n      data: optional(any())\n    })\n  })]);\n}\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult(schema) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema)\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext(value) {\n  return jsonRpcResult(type({\n    context: type({\n      slot: number()\n    }),\n    value\n  }));\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext(value) {\n  return type({\n    context: type({\n      slot: number()\n    }),\n    value\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(version, response) {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(accountKey => new PublicKey(accountKey)),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data)\n      })),\n      addressTableLookups: response.addressTableLookups\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n// Deprecated as of v1.5.5\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\n/**\n * Configuration object for changing `getBalance` query behavior\n */\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\n/**\n * Configuration object for changing `getSlot` query behavior\n */\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\n/**\n * Configuration object for changing `getSupply` request behavior\n */\n/**\n * Configuration object for changing query behavior\n */\n/**\n * Information describing a cluster node\n */\n/**\n * Information describing a vote account\n */\n/**\n * A collection of cluster vote accounts\n */\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nconst GetInflationGovernorResult = type({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number()\n});\n\n/**\n * The inflation reward for an epoch\n */\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(array(nullable(type({\n  epoch: number(),\n  effectiveSlot: number(),\n  amount: number(),\n  postBalance: number(),\n  commission: optional(nullable(number()))\n}))));\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(type({\n  slot: number(),\n  prioritizationFee: number()\n}));\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = type({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number()\n});\n\n/**\n * Information about the current epoch\n */\n\nconst GetEpochInfoResult = type({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number())\n});\nconst GetEpochScheduleResult = type({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number()\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([type({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = type({\n  err: TransactionErrorResult\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\n\nconst VersionResult = type({\n  'solana-core': string(),\n  'feature-set': optional(number())\n});\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n  err: nullable(union([type({}), string()])),\n  logs: nullable(array(string())),\n  accounts: optional(nullable(array(nullable(type({\n    executable: boolean(),\n    owner: string(),\n    lamports: number(),\n    data: array(string()),\n    rentEpoch: optional(number())\n  }))))),\n  unitsConsumed: optional(number()),\n  returnData: optional(nullable(type({\n    programId: string(),\n    data: tuple([string(), literal('base64')])\n  })))\n}));\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction message from the RPC API\n */\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * A partially decoded transaction instruction\n */\n\n/**\n * A parsed transaction message account\n */\n\n/**\n * A parsed transaction instruction\n */\n\n/**\n * A parsed address table lookup\n */\n\n/**\n * A parsed transaction message\n */\n\n/**\n * A parsed transaction\n */\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\n\n/**\n * A parsed transaction on the ledger with meta\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A block with parsed transactions\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * A Block on the ledger with signatures only\n */\n\n/**\n * recent block production information\n */\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(type({\n  byIdentity: record(string(), array(number())),\n  range: type({\n    firstSlot: number(),\n    lastSlot: number()\n  })\n}));\n\n/**\n * A performance sample\n */\n\nfunction createRpcClient(url, httpHeaders, customFetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent) {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent;\n  {\n    if (httpAgent != null) {\n      console.warn('You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' + 'It has been ignored; `httpAgent` is only used in Node environments.');\n    }\n  }\n  let fetchWithMiddleware;\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise((resolve, reject) => {\n        try {\n          fetchMiddleware(info, init, (modifiedInfo, modifiedInit) => resolve([modifiedInfo, modifiedInit]));\n        } catch (error) {\n          reject(error);\n        }\n      });\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign({\n        'Content-Type': 'application/json'\n      }, httpHeaders || {}, COMMON_HTTP_HEADERS)\n    };\n    try {\n      let too_many_requests_retries = 5;\n      let res;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(`Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`);\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n  return clientBrowser;\n}\nfunction createRpcRequest(client) {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\nfunction createRpcBatchRequest(client) {\n  return requests => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n      const batch = requests.map(params => {\n        return client.request(params.methodName, params.args);\n      });\n      client.request(batch, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(GetRecentPrioritizationFeesResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(type({\n  total: number(),\n  circulating: number(),\n  nonCirculating: number(),\n  nonCirculatingAccounts: array(PublicKeyFromString)\n}));\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = type({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n});\n\n/**\n * Token address and balance.\n */\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(array(type({\n  address: PublicKeyFromString,\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: BufferFromRawAccountData,\n    rentEpoch: number()\n  })\n})));\nconst ParsedAccountDataResult = type({\n  program: string(),\n  parsed: unknown(),\n  space: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: ParsedAccountDataResult,\n    rentEpoch: number()\n  })\n})));\n\n/**\n * Pair of an account address and its balance\n */\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(array(type({\n  lamports: number(),\n  address: PublicKeyFromString\n})));\n\n/**\n * @internal\n */\nconst AccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number()\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\nconst ParsedOrRawAccountData = coerce(union([instance(Buffer), ParsedAccountDataResult]), union([RawAccountDataResult, ParsedAccountDataResult]), value => {\n  if (Array.isArray(value)) {\n    return create(value, BufferFromRawAccountData);\n  } else {\n    return value;\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number()\n});\nconst KeyedParsedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = type({\n  state: union([literal('active'), literal('inactive'), literal('activating'), literal('deactivating')]),\n  active: number(),\n  inactive: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = type({\n  parent: number(),\n  slot: number(),\n  root: number()\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = type({\n  subscription: number(),\n  result: SlotInfoResult\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([type({\n  type: union([literal('firstShredReceived'), literal('completed'), literal('optimisticConfirmation'), literal('root')]),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('createdBank'),\n  parent: number(),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('frozen'),\n  slot: number(),\n  timestamp: number(),\n  stats: type({\n    numTransactionEntries: number(),\n    numSuccessfulTransactions: number(),\n    numFailedTransactions: number(),\n    maxTransactionsPerEntry: number()\n  })\n}), type({\n  type: literal('dead'),\n  slot: number(),\n  timestamp: number(),\n  err: string()\n})]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = type({\n  subscription: number(),\n  result: SlotUpdateResult\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(union([SignatureStatusResult, SignatureReceivedResult]))\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = type({\n  subscription: number(),\n  result: number()\n});\nconst ContactInfoResult = type({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string())\n});\nconst VoteAccountInfoResult = type({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number())\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(type({\n  current: array(VoteAccountInfoResult),\n  delinquent: array(VoteAccountInfoResult)\n}));\nconst ConfirmationStatus = union([literal('processed'), literal('confirmed'), literal('finalized')]);\nconst SignatureStatusResponse = type({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus)\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(array(nullable(SignatureStatusResponse)));\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\nconst AddressTableLookupStruct = type({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number())\n});\nconst ConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(string()),\n    header: type({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number()\n    }),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    })),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct))\n  })\n});\nconst AnnotatedAccountKey = type({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')]))\n});\nconst ConfirmedTransactionAccountsModeResult = type({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string())\n});\nconst ParsedInstructionResult = type({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString\n});\nconst RawInstructionResult = type({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString\n});\nconst InstructionResult = union([RawInstructionResult, ParsedInstructionResult]);\nconst UnknownInstructionResult = union([type({\n  parsed: unknown(),\n  program: string(),\n  programId: string()\n}), type({\n  accounts: array(string()),\n  data: string(),\n  programId: string()\n})]);\nconst ParsedOrRawInstruction = coerce(InstructionResult, UnknownInstructionResult, value => {\n  if ('accounts' in value) {\n    return create(value, RawInstructionResult);\n  } else {\n    return create(value, ParsedInstructionResult);\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct)))\n  })\n});\nconst TokenBalanceResult = type({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult\n});\nconst LoadedAddressesResult = type({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString)\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    }))\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(ParsedOrRawInstruction)\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = type({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number()))\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ParsedConfirmedTransactionResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  signatures: array(string()),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  meta: ConfirmedTransactionMetaResult,\n  blockTime: optional(nullable(number())),\n  transaction: ConfirmedTransactionResult,\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  transaction: ParsedConfirmedTransactionResult,\n  meta: nullable(ParsedConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n}));\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  lastValidBlockHeight: number()\n}));\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\nconst PerfSampleResult = type({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number()\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(array(PerfSampleResult));\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(nullable(type({\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n})));\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\n\n/**\n * Parsed account data\n */\n\n/**\n * Stake Activation data\n */\n\n/**\n * Data slice argument for getProgramAccounts\n */\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\n\n/**\n * A filter object for getProgramAccounts\n */\n\n/**\n * Configuration object for getProgramAccounts requests\n */\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\n\n/**\n * Configuration object for getMultipleAccounts\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getNonce`\n */\n\n/**\n * Configuration object for `getNonceAndContext`\n */\n\n/**\n * Information describing an account\n */\n\n/**\n * Account information identified by pubkey\n */\n\n/**\n * Callback function for account change notifications\n */\n\n/**\n * Callback function for program account change notifications\n */\n\n/**\n * Callback function for slot change notifications\n */\n\n/**\n * Callback function for slot update notifications\n */\n\n/**\n * Callback function for signature status notifications\n */\n\n/**\n * Signature status notification with transaction result\n */\n\n/**\n * Signature received notification\n */\n\n/**\n * Callback function for signature notifications\n */\n\n/**\n * Signature subscription options\n */\n\n/**\n * Callback function for root change notifications\n */\n\n/**\n * @internal\n */\nconst LogsResult = type({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string()\n});\n\n/**\n * Logs result.\n */\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = type({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number()\n});\n\n/**\n * Filter for log subscriptions.\n */\n\n/**\n * Callback function for log notifications.\n */\n\n/**\n * Signature result\n */\n\n/**\n * Transaction error\n */\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Signature status\n */\n\n/**\n * A confirmed signature with its status\n */\n\n/**\n * An object defining headers to be passed to the RPC server\n */\n\n/**\n * The type of the JavaScript `fetch()` API\n */\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\n\n/**\n * Configuration for instantiating a Connection\n */\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${\"0.0.0-development\" }`\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nclass Connection {\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(endpoint, _commitmentOrConfig) {\n    /** @internal */\n    this._commitment = void 0;\n    /** @internal */\n    this._confirmTransactionInitialTimeout = void 0;\n    /** @internal */\n    this._rpcEndpoint = void 0;\n    /** @internal */\n    this._rpcWsEndpoint = void 0;\n    /** @internal */\n    this._rpcClient = void 0;\n    /** @internal */\n    this._rpcRequest = void 0;\n    /** @internal */\n    this._rpcBatchRequest = void 0;\n    /** @internal */\n    this._rpcWebSocket = void 0;\n    /** @internal */\n    this._rpcWebSocketConnected = false;\n    /** @internal */\n    this._rpcWebSocketHeartbeat = null;\n    /** @internal */\n    this._rpcWebSocketIdleTimeout = null;\n    /** @internal\n     * A number that we increment every time an active connection closes.\n     * Used to determine whether the same socket connection that was open\n     * when an async operation started is the same one that's active when\n     * its continuation fires.\n     *\n     */\n    this._rpcWebSocketGeneration = 0;\n    /** @internal */\n    this._disableBlockhashCaching = false;\n    /** @internal */\n    this._pollingBlockhash = false;\n    /** @internal */\n    this._blockhashInfo = {\n      latestBlockhash: null,\n      lastFetch: 0,\n      transactionSignatures: [],\n      simulatedSignatures: []\n    };\n    /** @internal */\n    this._nextClientSubscriptionId = 0;\n    /** @internal */\n    this._subscriptionDisposeFunctionsByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionHashByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionStateChangeCallbacksByHash = {};\n    /** @internal */\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    /** @internal */\n    this._subscriptionsByHash = {};\n    /**\n     * Special case.\n     * After a signature is processed, RPCs automatically dispose of the\n     * subscription on the server side. We need to track which of these\n     * subscriptions have been disposed in such a way, so that we know\n     * whether the client is dealing with a not-yet-processed signature\n     * (in which case we must tear down the server subscription) or an\n     * already-processed signature (in which case the client can simply\n     * clear out the subscription locally without telling the server).\n     *\n     * NOTE: There is a proposal to eliminate this special case, here:\n     * https://github.com/solana-labs/solana/issues/18892\n     */\n    /** @internal */\n    this._subscriptionsAutoDisposedByRpc = new Set();\n    /*\n     * Returns the current block height of the node\n     */\n    this.getBlockHeight = (() => {\n      const requestPromises = {};\n      return async commitmentOrConfig => {\n        const {\n          commitment,\n          config\n        } = extractCommitmentFromConfig(commitmentOrConfig);\n        const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n        const requestHash = fastStableStringify$1(args);\n        requestPromises[requestHash] = requestPromises[requestHash] ?? (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(res.error, 'failed to get block height information');\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n        return await requestPromises[requestHash];\n      };\n    })();\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (_commitmentOrConfig && typeof _commitmentOrConfig === 'string') {\n      this._commitment = _commitmentOrConfig;\n    } else if (_commitmentOrConfig) {\n      this._commitment = _commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout = _commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = _commitmentOrConfig.wsEndpoint;\n      httpHeaders = _commitmentOrConfig.httpHeaders;\n      fetch = _commitmentOrConfig.fetch;\n      fetchMiddleware = _commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = _commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = _commitmentOrConfig.httpAgent;\n    }\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n    this._rpcClient = createRpcClient(endpoint, httpHeaders, fetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent);\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on('accountNotification', this._wsOnAccountNotification.bind(this));\n    this._rpcWebSocket.on('programNotification', this._wsOnProgramAccountNotification.bind(this));\n    this._rpcWebSocket.on('slotNotification', this._wsOnSlotNotification.bind(this));\n    this._rpcWebSocket.on('slotsUpdatesNotification', this._wsOnSlotUpdatesNotification.bind(this));\n    this._rpcWebSocket.on('signatureNotification', this._wsOnSignatureNotification.bind(this));\n    this._rpcWebSocket.on('rootNotification', this._wsOnRootNotification.bind(this));\n    this._rpcWebSocket.on('logsNotification', this._wsOnLogsNotification.bind(this));\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment() {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint() {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(publicKey, commitmentOrConfig) {\n    /** @internal */\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get balance for ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(publicKey, commitmentOrConfig) {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get balance of account ' + publicKey.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot) {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get block time for slot ${slot}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot() {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get minimum ledger slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock() {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get first available block');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(config) {\n    let configArg = {};\n    if (typeof config === 'string') {\n      configArg = {\n        commitment: config\n      };\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: config && config.commitment || this.commitment\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment\n      };\n    }\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(tokenMintAddress, commitment) {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(tokenAddress, commitment) {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token account balance');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(ownerAddress, filter, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(config) {\n    const arg = {\n      ...config,\n      commitment: config && config.commitment || this.commitment\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(mintAddress, commitment) {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(AccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(publicKey, commitmentOrConfig) {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + e);\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(publicKeys, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(AccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(publicKeys, commitmentOrConfig) {\n    const res = await this.getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig);\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(publicKey, commitmentOrConfig, epoch) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get Stake Activation ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const {\n      encoding,\n      ...configWithoutEncoding\n    } = config || {};\n    const args = this._buildArgs([programId.toBase58()], commitment, encoding || 'base64', configWithoutEncoding);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res = configWithoutEncoding.withContext === true ? create(unsafeRes, jsonRpcResultAndContext(baseSchema)) : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs([programId.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */ // eslint-disable-next-line no-dupe-class-members\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(strategy, commitment) {\n    let rawSignature;\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy;\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    }\n  }\n  getCancellationPromise(signal) {\n    return new Promise((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n  getTransactionConfirmationPromise({\n    commitment,\n    signature\n  }) {\n    let signatureSubscriptionId;\n    let disposeSignatureSubscriptionStateChangeObserver;\n    let done = false;\n    const confirmationPromise = new Promise((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(signature, (result, context) => {\n          signatureSubscriptionId = undefined;\n          const response = {\n            context,\n            value: result\n          };\n          resolve({\n            __type: TransactionStatus.PROCESSED,\n            response\n          });\n        }, commitment);\n        const subscriptionSetupPromise = new Promise(resolveSubscriptionSetup => {\n          if (signatureSubscriptionId == null) {\n            resolveSubscriptionSetup();\n          } else {\n            disposeSignatureSubscriptionStateChangeObserver = this._onSubscriptionStateChange(signatureSubscriptionId, nextState => {\n              if (nextState === 'subscribed') {\n                resolveSubscriptionSetup();\n              }\n            });\n          }\n        });\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {\n            context,\n            value\n          } = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip':\n                {\n                  if (value.confirmationStatus === 'processed') {\n                    return;\n                  }\n                  break;\n                }\n              case 'finalized':\n              case 'max':\n              case 'root':\n                {\n                  if (value.confirmationStatus === 'processed' || value.confirmationStatus === 'confirmed') {\n                    return;\n                  }\n                  break;\n                }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value\n              }\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {\n      abortConfirmation,\n      confirmationPromise\n    };\n  }\n  async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      lastValidBlockHeight,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({\n          __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED\n        });\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      let currentNonceValue = nonceValue;\n      let lastCheckedSlot = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {\n            context,\n            value: nonceAccount\n          } = await this.getNonceAndContext(nonceAccountPubkey, {\n            commitment,\n            minContextSlot\n          });\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (status.context.slot < (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {\n            confirmationStatus\n          } = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (confirmationStatus !== 'processed' && confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              (_ => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {\n              err: signatureStatus.value.err\n            }\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip':\n          {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n      }\n      timeoutId = setTimeout(() => resolve({\n        __type: TransactionStatus.TIMED_OUT,\n        timeoutMs\n      }), timeoutMs);\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    let result;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(signature, outcome.timeoutMs / 1000);\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes() {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(startSlot, limit) {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(signature, config) {\n    const {\n      context,\n      value: values\n    } = await this.getSignatureStatuses([signature], config);\n    assert(values.length === 1);\n    const value = values[0];\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(signatures, config) {\n    const params = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction count');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment) {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(addresses, epoch, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([addresses.map(pubkey => pubkey.toBase58())], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate() {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule() {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(epochSchedule.slotsPerEpoch, epochSchedule.leaderScheduleSlotOffset, epochSchedule.warmup, epochSchedule.firstNormalEpoch, epochSchedule.firstNormalSlot);\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule() {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(dataLength, commitment) {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest('getMinimumBalanceForRentExemption', args);\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(limit) {\n    const unsafeRes = await this._rpcRequest('getRecentPerformanceSamples', limit ? [limit] : []);\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent performance samples');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(blockhash, commitment) {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeCalculatorForBlockhash', args);\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {\n      context,\n      value\n    } = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(message, commitment) {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(config) {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest('getRecentPrioritizationFees', args);\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent prioritization fees');\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(commitment) {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(commitmentOrConfig) {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(blockhash, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs([blockhash], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to determine if the blockhash `' + blockhash + '`is valid');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion() {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash() {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */ // eslint-disable-next-line no-dupe-class-members\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  // eslint-disable-next-line no-dupe-class-members\n  // eslint-disable-next-line no-dupe-class-members\n  /**\n   * Fetch a processed block from the cluster.\n   */ // eslint-disable-next-line no-dupe-class-members\n  async getBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            const {\n              result\n            } = res;\n            return result ? {\n              ...result,\n              transactions: result.transactions.map(({\n                transaction,\n                meta,\n                version\n              }) => ({\n                meta,\n                transaction: {\n                  ...transaction,\n                  message: versionedMessageFromResponse(version, transaction.message)\n                },\n                version\n              }))\n            } : null;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get confirmed block');\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetParsedBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get block');\n    }\n  }\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(configOrCommitment) {\n    let extra;\n    let commitment;\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {\n        commitment: c,\n        ...rest\n      } = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block production information');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */ // eslint-disable-next-line no-dupe-class-members\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */ // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(signature, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(result.version, result.transaction.message)\n      }\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(signature, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */ // eslint-disable-next-line no-dupe-class-members\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */ // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(result.version, result.transaction.message)\n        }\n      };\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message\n          }\n        };\n      })\n    };\n    return {\n      ...block,\n      transactions: block.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        return {\n          meta,\n          transaction: Transaction.populate(transaction.message, transaction.signatures)\n        };\n      })\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(startSlot, endSlot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed(endSlot !== undefined ? [startSlot, endSlot] : [startSlot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures)\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n      return {\n        methodName: 'getConfirmedTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(address, startSlot, endSlot) {\n    let options = {};\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(startSlot, 'finalized');\n        if (block.signatures.length > 0) {\n          options.until = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(address, options);\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getConfirmedSignaturesForAddress2', args);\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed signatures for address');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signatures for address');\n    }\n    return res.result;\n  }\n  async getAddressLookupTable(accountKey, config) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(accountKey, config);\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data)\n      });\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(nonceAccount, commitmentOrConfig) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(nonceAccount, commitmentOrConfig);\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(nonceAccount, commitmentOrConfig) {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get nonce for account ' + nonceAccount.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(to, lamports) {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [to.toBase58(), lamports]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `airdrop to ${to.toBase58()} failed`);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(disableCache) {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash() {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash ? cachedLatestBlockhash.blockhash : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: []\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n      throw new Error(`Unable to obtain a new blockhash after ${Date.now() - startTime}ms`);\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(config) {\n    const {\n      commitment,\n      config: configArg\n    } = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get stake minimum delegation`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n\n  /**\n   * Simulate a transaction\n   */ // eslint-disable-next-line no-dupe-class-members\n  /**\n   * Simulate a transaction\n   */ // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(transactionOrMessage, configOrSigners, includeAccounts) {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction = Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n      const config = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        if (!signers) break;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.simulatedSignatures.includes(signature) && !this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = {\n      encoding: 'base64',\n      commitment: this.commitment\n    };\n    if (includeAccounts) {\n      const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map(key => key.toBase58());\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses\n      };\n    }\n    if (signers) {\n      config.sigVerify = true;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError('failed to simulate transaction: ' + res.error.message, logs);\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n\n  /**\n   * Send a signed transaction\n   */ // eslint-disable-next-line no-dupe-class-members\n  /**\n   * Sign and send a transaction\n   */ // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(transaction, signersOrOptions, options) {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(rawTransaction, options) {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(encodedTransaction, options);\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(encodedTransaction, options) {\n    const config = {\n      encoding: 'base64'\n    };\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment = options && options.preflightCommitment || this.commitment;\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError('failed to send transaction: ' + res.error.message, logs);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration = (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(this._subscriptionsByHash).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending'\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _setSubscription(hash, nextSubscription) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onSubscriptionStateChange(clientSubscriptionId, callback) {\n    const hash = this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash] ||= new Set();\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(`Error when closing socket connection: ${err.message}`);\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n    await Promise.all(\n    // Don't be tempted to change this to `Object.entries`. We call\n    // `_updateSubscriptions` recursively when processing the state,\n    // so it's important that we look up the *current* version of\n    // each subscription, every time we process a hash.\n    Object.keys(this._subscriptionsByHash).map(async hash => {\n      const subscription = this._subscriptionsByHash[hash];\n      if (subscription === undefined) {\n        // This entry has since been deleted. Skip.\n        return;\n      }\n      switch (subscription.state) {\n        case 'pending':\n        case 'unsubscribed':\n          if (subscription.callbacks.size === 0) {\n            /**\n             * You can end up here when:\n             *\n             * - a subscription has recently unsubscribed\n             *   without having new callbacks added to it\n             *   while the unsubscribe was in flight, or\n             * - when a pending subscription has its\n             *   listeners removed before a request was\n             *   sent to the server.\n             *\n             * Being that nobody is interested in this\n             * subscription any longer, delete it.\n             */\n            delete this._subscriptionsByHash[hash];\n            if (subscription.state === 'unsubscribed') {\n              delete this._subscriptionCallbacksByServerSubscriptionId[subscription.serverSubscriptionId];\n            }\n            await this._updateSubscriptions();\n            return;\n          }\n          await (async () => {\n            const {\n              args,\n              method\n            } = subscription;\n            try {\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'subscribing'\n              });\n              const serverSubscriptionId = await this._rpcWebSocket.call(method, args);\n              this._setSubscription(hash, {\n                ...subscription,\n                serverSubscriptionId,\n                state: 'subscribed'\n              });\n              this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId] = subscription.callbacks;\n              await this._updateSubscriptions();\n            } catch (e) {\n              if (e instanceof Error) {\n                console.error(`${method} error for argument`, args, e.message);\n              }\n              if (!isCurrentConnectionStillActive()) {\n                return;\n              }\n              // TODO: Maybe add an 'errored' state or a retry limit?\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'pending'\n              });\n              await this._updateSubscriptions();\n            }\n          })();\n          break;\n        case 'subscribed':\n          if (subscription.callbacks.size === 0) {\n            // By the time we successfully set up a subscription\n            // with the server, the client stopped caring about it.\n            // Tear it down now.\n            await (async () => {\n              const {\n                serverSubscriptionId,\n                unsubscribeMethod\n              } = subscription;\n              if (this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)) {\n                /**\n                 * Special case.\n                 * If we're dealing with a subscription that has been auto-\n                 * disposed by the RPC, then we can skip the RPC call to\n                 * tear down the subscription here.\n                 *\n                 * NOTE: There is a proposal to eliminate this special case, here:\n                 * https://github.com/solana-labs/solana/issues/18892\n                 */\n                this._subscriptionsAutoDisposedByRpc.delete(serverSubscriptionId);\n              } else {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                try {\n                  await this._rpcWebSocket.call(unsubscribeMethod, [serverSubscriptionId]);\n                } catch (e) {\n                  if (e instanceof Error) {\n                    console.error(`${unsubscribeMethod} error:`, e.message);\n                  }\n                  if (!isCurrentConnectionStillActive()) {\n                    return;\n                  }\n                  // TODO: Maybe add an 'errored' state or a retry limit?\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'subscribed'\n                  });\n                  await this._updateSubscriptions();\n                  return;\n                }\n              }\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'unsubscribed'\n              });\n              await this._updateSubscriptions();\n            })();\n          }\n          break;\n      }\n    }));\n  }\n\n  /**\n   * @internal\n   */\n  _handleServerNotification(serverSubscriptionId, callbackArgs) {\n    const callbacks = this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n        // I failed to find a way to convince TypeScript that `cb` is of type\n        // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n        // See https://github.com/microsoft/TypeScript/issues/47615\n        // @ts-ignore\n        ...callbackArgs);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, AccountNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _makeSubscription(subscriptionConfig,\n  /**\n   * When preparing `args` for a call to `_makeSubscription`, be sure\n   * to carefully apply a default `commitment` property, if necessary.\n   *\n   * - If the user supplied a `commitment` use that.\n   * - Otherwise, if the `Connection::commitment` is set, use that.\n   * - Otherwise, set it to the RPC server default: `finalized`.\n   *\n   * This is extremely important to ensure that these two fundamentally\n   * identical subscriptions produce the same identifying hash:\n   *\n   * - A subscription made without specifying a commitment.\n   * - A subscription made where the commitment specified is the same\n   *   as the default applied to the subscription above.\n   *\n   * Example; these two subscriptions must produce the same hash:\n   *\n   * - An `accountSubscribe` subscription for `'PUBKEY'`\n   * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n   *   `'finalized'`.\n   *\n   * See the 'making a subscription with defaulted params omitted' test\n   * in `connection-subscriptions.ts` for more.\n   */\n  args) {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify$1([subscriptionConfig.method, args], true /* isArrayProp */);\n\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending'\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(subscription !== undefined, `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`);\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(publicKey, callback, commitment) {\n    const args = this._buildArgs([publicKey.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64');\n    return this._makeSubscription({\n      callback,\n      method: 'accountSubscribe',\n      unsubscribeMethod: 'accountUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'account change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, ProgramAccountNotificationResult);\n    this._handleServerNotification(subscription, [{\n      accountId: result.value.pubkey,\n      accountInfo: result.value.account\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(programId, callback, commitment, filters) {\n    const args = this._buildArgs([programId.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64' /* encoding */, filters ? {\n      filters: filters\n    } : undefined /* extra */);\n\n    return this._makeSubscription({\n      callback,\n      method: 'programSubscribe',\n      unsubscribeMethod: 'programUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'program account change');\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(filter, callback, commitment) {\n    const args = this._buildArgs([typeof filter === 'object' ? {\n      mentions: [filter.toString()]\n    } : filter], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n\n    return this._makeSubscription({\n      callback,\n      method: 'logsSubscribe',\n      unsubscribeMethod: 'logsUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, LogsNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotSubscribe',\n      unsubscribeMethod: 'slotUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotUpdateNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotsUpdatesSubscribe',\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot update');\n  }\n\n  /**\n   * @internal\n   */\n\n  async _unsubscribeClientSubscription(clientSubscriptionId, subscriptionName) {\n    const dispose = this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn('Ignored unsubscribe request because an active subscription with id ' + `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` + 'could not be found.');\n    }\n  }\n  _buildArgs(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error('Using Connection with default commitment: `' + this._commitment + '`, but method requires at least `confirmed`');\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SignatureNotificationResult);\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification(subscription, result.value === 'receivedSignature' ? [{\n      type: 'received'\n    }, result.context] : [{\n      type: 'status',\n      result: result.value\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(signature, callback, commitment) {\n    const args = this._buildArgs([signature], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(signature, callback, options) {\n    const {\n      commitment,\n      ...extra\n    } = {\n      ...options,\n      commitment: options && options.commitment || this._commitment || 'finalized' // Apply connection/server default.\n    };\n\n    const args = this._buildArgs([signature], commitment, undefined /* encoding */, extra);\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        callback(notification, context);\n        // Signatures subscriptions are auto-removed by the RPC service\n        // so no need to explicitly send an unsubscribe message.\n        try {\n          this.removeSignatureListener(clientSubscriptionId);\n          // eslint-disable-next-line no-empty\n        } catch (_err) {\n          // Already removed.\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'signature result');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, RootNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'rootSubscribe',\n      unsubscribeMethod: 'rootUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'root change');\n  }\n}\n\n/**\n * Keypair signer interface\n */\n\n/**\n * An account keypair used for signing transactions.\n */\nclass Keypair {\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair) {\n    this._keypair = void 0;\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate() {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(secretKey, options) {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed) {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey() {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nconst LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('recentSlot'), BufferLayout.u8('bumpSeed')])\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64(), BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u32(), -8), 'addresses')])\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\nclass AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [layoutType, layout] of Object.entries(LOOKUP_TABLE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == index) {\n        type = layoutType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Invalid Instruction. Should be a LookupTable Instruction');\n    }\n    return type;\n  }\n  static decodeCreateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n    const {\n      recentSlot\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable, instruction.data);\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot)\n    };\n  }\n  static decodeExtendLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(`invalid instruction; found ${instruction.keys.length} keys, expected at least 2`);\n    }\n    const {\n      addresses\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable, instruction.data);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer))\n    };\n  }\n  static decodeCloseLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey\n    };\n  }\n  static decodeFreezeLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n  static decodeDeactivateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error('invalid instruction; programId is not AddressLookupTable Program');\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\nclass AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static createLookupTable(params) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync([params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)], this.programId);\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed\n    });\n    const keys = [{\n      pubkey: lookupTableAddress,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.payer,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }];\n    return [new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    }), lookupTableAddress];\n  }\n  static freezeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static extendLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes())\n    });\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (params.payer) {\n      keys.push({\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static deactivateLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static closeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.recipient,\n      isSigner: false,\n      isWritable: true\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n}\nAddressLookupTableProgram.programId = new PublicKey('AddressLookupTab1e1111111111111111111111111');\n\n/**\n * Compute Budget Instruction class\n */\nclass ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a ComputeBudgetInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units,\n      additionalFee\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits, instruction.data);\n    return {\n      units,\n      additionalFee\n    };\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      bytes\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame, instruction.data);\n    return {\n      bytes\n    };\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit, instruction.data);\n    return {\n      units\n    };\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      microLamports\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice, instruction.data);\n    return {\n      microLamports\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error('invalid instruction; programId is not ComputeBudgetProgram');\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\n\n/**\n * Request units instruction params\n */\n\n/**\n * Request heap frame instruction params\n */\n\n/**\n * Set compute unit limit instruction params\n */\n\n/**\n * Set compute unit price instruction params\n */\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nconst COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units'), BufferLayout.u32('additionalFee')])\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')])\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units')])\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), u64('microLamports')])\n  }\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nclass ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static requestHeapFrame(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitLimit(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitPrice(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports)\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n}\nComputeBudgetProgram.programId = new PublicKey('ComputeBudget111111111111111111111111111111');\n\nconst PRIVATE_KEY_BYTES$1 = 64;\nconst PUBLIC_KEY_BYTES$1 = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u8('padding'), BufferLayout.u16('signatureOffset'), BufferLayout.u16('signatureInstructionIndex'), BufferLayout.u16('publicKeyOffset'), BufferLayout.u16('publicKeyInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u16('messageInstructionIndex')]);\nclass Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      instructionIndex\n    } = params;\n    assert(publicKey.length === PUBLIC_KEY_BYTES$1, `Public Key must be ${PUBLIC_KEY_BYTES$1} bytes but received ${publicKey.length} bytes`);\n    assert(signature.length === SIGNATURE_BYTES, `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`);\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n    const index = instructionIndex == null ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n    : instructionIndex;\n    ED25519_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      padding: 0,\n      signatureOffset,\n      signatureInstructionIndex: index,\n      publicKeyOffset,\n      publicKeyInstructionIndex: index,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: index\n    }, instructionData);\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey,\n      message,\n      instructionIndex\n    } = params;\n    assert(privateKey.length === PRIVATE_KEY_BYTES$1, `Private key must be ${PRIVATE_KEY_BYTES$1} bytes but received ${privateKey.length} bytes`);\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nEd25519Program.programId = new PublicKey('Ed25519SigVerify111111111111111111111111111');\n\nconst ecdsaSign = (msgHash, privKey) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery];\n};\nsecp256k1.utils.isValidPrivateKey;\nconst publicKeyCreate = secp256k1.getPublicKey;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u16('signatureOffset'), BufferLayout.u8('signatureInstructionIndex'), BufferLayout.u16('ethAddressOffset'), BufferLayout.u8('ethAddressInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u8('messageInstructionIndex'), BufferLayout.blob(20, 'ethAddress'), BufferLayout.blob(64, 'signature'), BufferLayout.u8('recoveryId')]);\nclass Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(publicKey) {\n    assert(publicKey.length === PUBLIC_KEY_BYTES, `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`);\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    } = params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(params) {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0\n    } = params;\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n    assert(ethAddress.length === ETHEREUM_ADDRESS_BYTES, `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`);\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(SECP256K1_INSTRUCTION_LAYOUT.span + message.length);\n    SECP256K1_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      signatureOffset,\n      signatureInstructionIndex: instructionIndex,\n      ethAddressOffset,\n      ethAddressInstructionIndex: instructionIndex,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: instructionIndex,\n      signature: toBuffer(signature),\n      ethAddress: toBuffer(ethAddress),\n      recoveryId\n    }, instructionData);\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey: pkey,\n      message,\n      instructionIndex\n    } = params;\n    assert(pkey.length === PRIVATE_KEY_BYTES, `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`);\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false /* isCompressed */).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nSecp256k1Program.programId = new PublicKey('KeccakSecp256k11111111111111111111111111111');\n\nvar _class2;\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nconst STAKE_CONFIG_ID = new PublicKey('StakeConfig11111111111111111111111111111111');\n\n/**\n * Stake account authority info\n */\nclass Authorized {\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker, withdrawer) {\n    /** stake authority */\n    this.staker = void 0;\n    /** withdraw authority */\n    this.withdrawer = void 0;\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n/**\n * Stake account lockup info\n */\nclass Lockup {\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp, epoch, custodian) {\n    /** Unix timestamp of lockup expiration */\n    this.unixTimestamp = void 0;\n    /** Epoch of lockup expiration */\n    this.epoch = void 0;\n    /** Lockup custodian authority */\n    this.custodian = void 0;\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n}\n_class2 = Lockup;\nLockup.default = new _class2(0, 0, PublicKey.default);\n/**\n * Create stake account transaction params\n */\n/**\n * Create stake account with seed transaction params\n */\n/**\n * Initialize stake instruction params\n */\n/**\n * Delegate stake instruction params\n */\n/**\n * Authorize stake instruction params\n */\n/**\n * Authorize stake instruction params using a derived key\n */\n/**\n * Split stake instruction params\n */\n/**\n * Split with seed transaction params\n */\n/**\n * Withdraw stake instruction params\n */\n/**\n * Deactivate stake instruction params\n */\n/**\n * Merge stake instruction params\n */\n/**\n * Stake Instruction class\n */\nclass StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized,\n      lockup\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Initialize, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(new PublicKey(authorized.staker), new PublicKey(authorized.withdrawer)),\n      lockup: new Lockup(lockup.unixTimestamp, lockup.epoch, new PublicKey(lockup.custodian))\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      stakeAuthorizationType\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Split, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nconst STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), authorized(), lockup()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType')])\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType'), rustString('authoritySeed'), publicKey('authorityOwner')])\n  }\n});\n\n/**\n * Stake authorization type\n */\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nconst StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nclass StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params) {\n    const {\n      stakePubkey,\n      authorized,\n      lockup: maybeLockup\n    } = params;\n    const lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer())\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer())\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccountWithSeed({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      basePubkey: params.basePubkey,\n      seed: params.seed,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      votePubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: STAKE_CONFIG_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer())\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorityBase,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {\n      lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: splitStakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.authorizedPubkey,\n      newAccountPubkey: params.splitStakePubkey,\n      lamports: 0,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.allocate({\n      accountPubkey: splitStakePubkey,\n      basePubkey,\n      seed,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.splitInstruction({\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    }));\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params) {\n    const {\n      stakePubkey,\n      sourceStakePubKey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: sourceStakePubKey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      toPubkey,\n      lamports,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n}\nStakeProgram.programId = new PublicKey('Stake11111111111111111111111111111111111111');\n/**\n * Max space of a Stake account\n *\n * This is generated from the solana-stake-program StakeState struct as\n * `StakeState::size_of()`:\n * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n */\nStakeProgram.space = 200;\n\n/**\n * Vote account info\n */\nclass VoteInit {\n  /** [0, 100] */\n\n  constructor(nodePubkey, authorizedVoter, authorizedWithdrawer, commission) {\n    this.nodePubkey = void 0;\n    this.authorizedVoter = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\n\n/**\n * InitializeAccount instruction params\n */\n\n/**\n * Authorize instruction params\n */\n\n/**\n * AuthorizeWithSeed instruction params\n */\n\n/**\n * Withdraw from vote account transaction params\n */\n\n/**\n * Vote Instruction class\n */\nclass VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n    const {\n      voteInit\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.InitializeAccount, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(new PublicKey(voteInit.nodePubkey), new PublicKey(voteInit.authorizedVoter), new PublicKey(voteInit.authorizedWithdrawer), voteInit.commission)\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      voteAuthorizationType\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      }\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType\n      }\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(currentAuthorityDerivedKeyOwnerPubkey),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      },\n      votePubkey: instruction.keys[0].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\n\n/** @internal */\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteInit()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('voteAuthorizationType')])\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteAuthorizeWithSeedArgs()])\n  }\n});\n\n/**\n * VoteAuthorize type\n */\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nconst VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nclass VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(params) {\n    const {\n      votePubkey,\n      nodePubkey,\n      voteInit\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(voteInit.authorizedWithdrawer.toBuffer()),\n        commission: voteInit.commission\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: nodePubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.votePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.initializeAccount({\n      votePubkey: params.votePubkey,\n      nodePubkey: params.voteInit.nodePubkey,\n      voteInit: params.voteInit\n    }));\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params) {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(currentAuthorityDerivedKeyOwnerPubkey.toBuffer()),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index\n      }\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: currentAuthorityDerivedKeyBasePubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      lamports,\n      toPubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(params, currentVoteAccountBalance, rentExemptMinimum) {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error('Withdraw will leave vote account with insuffcient funds.');\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\nVoteProgram.programId = new PublicKey('Vote111111111111111111111111111111111111111');\n/**\n * Max space of a Vote account\n *\n * This is generated from the solana-vote-program VoteState struct as\n * `VoteState::size_of()`:\n * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n *\n * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n */\nVoteProgram.space = 3731;\n\nconst VALIDATOR_INFO_KEY = new PublicKey('Va1idator1nfo111111111111111111111111111111');\n\n/**\n * @internal\n */\n\n/**\n * Info used to identity validators.\n */\n\nconst InfoString = type({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string())\n});\n\n/**\n * ValidatorInfo class\n */\nclass ValidatorInfo {\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key, info) {\n    /**\n     * validator public key\n     */\n    this.key = void 0;\n    /**\n     * validator information\n     */\n    this.info = void 0;\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(buffer) {\n    let byteArray = [...buffer];\n    const configKeyCount = decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n    const configKeys = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({\n        publicKey,\n        isSigner\n      });\n    }\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo = rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo);\n        assert$1(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n    return null;\n  }\n}\n\nconst VOTE_PROGRAM_ID = new PublicKey('Vote111111111111111111111111111111111111111');\n\n/**\n * History of how many credits earned by the end of each epoch\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission'), BufferLayout.nu64(),\n// votes.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.u32('confirmationCount')]), BufferLayout.offset(BufferLayout.u32(), -8), 'votes'), BufferLayout.u8('rootSlotValid'), BufferLayout.nu64('rootSlot'), BufferLayout.nu64(),\n// authorizedVoters.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), publicKey('authorizedVoter')]), BufferLayout.offset(BufferLayout.u32(), -8), 'authorizedVoters'), BufferLayout.struct([BufferLayout.seq(BufferLayout.struct([publicKey('authorizedPubkey'), BufferLayout.nu64('epochOfLastAuthorizedSwitch'), BufferLayout.nu64('targetEpoch')]), 32, 'buf'), BufferLayout.nu64('idx'), BufferLayout.u8('isEmpty')], 'priorVoters'), BufferLayout.nu64(),\n// epochCredits.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), BufferLayout.nu64('credits'), BufferLayout.nu64('prevCredits')]), BufferLayout.offset(BufferLayout.u32(), -8), 'epochCredits'), BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')], 'lastTimestamp')]);\n/**\n * VoteAccount class\n */\nclass VoteAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.nodePubkey = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.rootSlot = void 0;\n    this.votes = void 0;\n    this.authorizedVoters = void 0;\n    this.priorVoters = void 0;\n    this.epochCredits = void 0;\n    this.lastTimestamp = void 0;\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(buffer) {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n    let rootSlot = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp\n    });\n  }\n}\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch\n}) {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter)\n  };\n}\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch\n}) {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch\n  };\n}\nfunction getPriorVoters({\n  buf,\n  idx,\n  isEmpty\n}) {\n  if (isEmpty) {\n    return [];\n  }\n  return [...buf.slice(idx + 1).map(parsePriorVoters), ...buf.slice(0, idx).map(parsePriorVoters)];\n}\n\nconst endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/'\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/'\n  }\n};\n/**\n * Retrieves the RPC API URL for the specified cluster\n * @param {Cluster} [cluster=\"devnet\"] - The cluster name of the RPC API URL to use. Possible options: 'devnet' | 'testnet' | 'mainnet-beta'\n * @param {boolean} [tls=\"http\"] - Use TLS when connecting to cluster.\n *\n * @returns {string} URL string of the RPC endpoint\n */\nfunction clusterApiUrl(cluster, tls) {\n  const key = tls === false ? 'http' : 'https';\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */ // eslint-disable-next-line no-redeclare\n// eslint-disable-next-line no-redeclare\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, confirmationStrategyOrConfirmOptions, maybeConfirmOptions) {\n  let confirmationStrategy;\n  let options;\n  if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'lastValidBlockHeight')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'nonceValue')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy ? connection.confirmTransaction(confirmationStrategy, commitment) : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n  if (status.err) {\n    throw new Error(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n/**\n * There are 1-billion lamports in one SOL\n */\nconst LAMPORTS_PER_SOL = 1000000000;\n\nexport { Account, AddressLookupTableAccount, AddressLookupTableInstruction, AddressLookupTableProgram, Authorized, BLOCKHASH_CACHE_TIMEOUT_MS, BPF_LOADER_DEPRECATED_PROGRAM_ID, BPF_LOADER_PROGRAM_ID, BpfLoader, COMPUTE_BUDGET_INSTRUCTION_LAYOUTS, ComputeBudgetInstruction, ComputeBudgetProgram, Connection, Ed25519Program, Enum, EpochSchedule, FeeCalculatorLayout, Keypair, LAMPORTS_PER_SOL, LOOKUP_TABLE_INSTRUCTION_LAYOUTS, Loader, Lockup, MAX_SEED_LENGTH, Message, MessageAccountKeys, MessageV0, NONCE_ACCOUNT_LENGTH, NonceAccount, PACKET_DATA_SIZE, PUBLIC_KEY_LENGTH, PublicKey, SIGNATURE_LENGTH_IN_BYTES, SOLANA_SCHEMA, STAKE_CONFIG_ID, STAKE_INSTRUCTION_LAYOUTS, SYSTEM_INSTRUCTION_LAYOUTS, SYSVAR_CLOCK_PUBKEY, SYSVAR_EPOCH_SCHEDULE_PUBKEY, SYSVAR_INSTRUCTIONS_PUBKEY, SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY, SYSVAR_REWARDS_PUBKEY, SYSVAR_SLOT_HASHES_PUBKEY, SYSVAR_SLOT_HISTORY_PUBKEY, SYSVAR_STAKE_HISTORY_PUBKEY, Secp256k1Program, SendTransactionError, SolanaJSONRPCError, SolanaJSONRPCErrorCode, StakeAuthorizationLayout, StakeInstruction, StakeProgram, Struct, SystemInstruction, SystemProgram, Transaction, TransactionExpiredBlockheightExceededError, TransactionExpiredNonceInvalidError, TransactionExpiredTimeoutError, TransactionInstruction, TransactionMessage, TransactionStatus, VALIDATOR_INFO_KEY, VERSION_PREFIX_MASK, VOTE_PROGRAM_ID, ValidatorInfo, VersionedMessage, VersionedTransaction, VoteAccount, VoteAuthorizationLayout, VoteInit, VoteInstruction, VoteProgram, clusterApiUrl, sendAndConfirmRawTransaction, sendAndConfirmTransaction };\n//# sourceMappingURL=index.browser.esm.js.map\n","export var integers = ['u8', 'u16', 'u32', 'u64', 'u128', 'i8', 'i16', 'i32', 'i64', 'i128', 'f32', 'f64'];\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { integers } from './types.js';\nexport function isArrayLike(value) {\n    // source: https://stackoverflow.com/questions/24048547/checking-if-an-object-is-array-like\n    return (Array.isArray(value) ||\n        (!!value &&\n            typeof value === 'object' &&\n            'length' in value &&\n            typeof (value.length) === 'number' &&\n            (value.length === 0 ||\n                (value.length > 0 &&\n                    (value.length - 1) in value))));\n}\nexport function expect_type(value, type, fieldPath) {\n    if (typeof (value) !== type) {\n        throw new Error(\"Expected \".concat(type, \" not \").concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexport function expect_bigint(value, fieldPath) {\n    var basicType = ['number', 'string', 'bigint', 'boolean'].includes(typeof (value));\n    var strObject = typeof (value) === 'object' && value !== null && 'toString' in value;\n    if (!basicType && !strObject) {\n        throw new Error(\"Expected bigint, number, boolean or string not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexport function expect_same_size(length, expected, fieldPath) {\n    if (length !== expected) {\n        throw new Error(\"Array length \".concat(length, \" does not match schema length \").concat(expected, \" at \").concat(fieldPath.join('.')));\n    }\n}\nexport function expect_enum(value, fieldPath) {\n    if (typeof (value) !== 'object' || value === null) {\n        throw new Error(\"Expected object not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\n// Validate Schema\nvar VALID_STRING_TYPES = integers.concat(['bool', 'string']);\nvar VALID_OBJECT_KEYS = ['option', 'enum', 'array', 'set', 'map', 'struct'];\nvar ErrorSchema = /** @class */ (function (_super) {\n    __extends(ErrorSchema, _super);\n    function ErrorSchema(schema, expected) {\n        var message = \"Invalid schema: \".concat(JSON.stringify(schema), \" expected \").concat(expected);\n        return _super.call(this, message) || this;\n    }\n    return ErrorSchema;\n}(Error));\nexport { ErrorSchema };\nexport function validate_schema(schema) {\n    if (typeof (schema) === 'string' && VALID_STRING_TYPES.includes(schema)) {\n        return;\n    }\n    if (schema && typeof (schema) === 'object') {\n        var keys = Object.keys(schema);\n        if (keys.length === 1 && VALID_OBJECT_KEYS.includes(keys[0])) {\n            var key = keys[0];\n            if (key === 'option')\n                return validate_schema(schema[key]);\n            if (key === 'enum')\n                return validate_enum_schema(schema[key]);\n            if (key === 'array')\n                return validate_array_schema(schema[key]);\n            if (key === 'set')\n                return validate_schema(schema[key]);\n            if (key === 'map')\n                return validate_map_schema(schema[key]);\n            if (key === 'struct')\n                return validate_struct_schema(schema[key]);\n        }\n    }\n    throw new ErrorSchema(schema, VALID_OBJECT_KEYS.join(', ') + ' or ' + VALID_STRING_TYPES.join(', '));\n}\nfunction validate_enum_schema(schema) {\n    if (!Array.isArray(schema))\n        throw new ErrorSchema(schema, 'Array');\n    for (var _i = 0, schema_1 = schema; _i < schema_1.length; _i++) {\n        var sch = schema_1[_i];\n        if (typeof sch !== 'object' || !('struct' in sch)) {\n            throw new Error('Missing \"struct\" key in enum schema');\n        }\n        if (typeof sch.struct !== 'object' || Object.keys(sch.struct).length !== 1) {\n            throw new Error('The \"struct\" in each enum must have a single key');\n        }\n        validate_schema({ struct: sch.struct });\n    }\n}\nfunction validate_array_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, '{ type, len? }');\n    if (schema.len && typeof schema.len !== 'number') {\n        throw new Error(\"Invalid schema: \".concat(schema));\n    }\n    if ('type' in schema)\n        return validate_schema(schema.type);\n    throw new ErrorSchema(schema, '{ type, len? }');\n}\nfunction validate_map_schema(schema) {\n    if (typeof schema === 'object' && 'key' in schema && 'value' in schema) {\n        validate_schema(schema.key);\n        validate_schema(schema.value);\n    }\n    else {\n        throw new ErrorSchema(schema, '{ key, value }');\n    }\n}\nfunction validate_struct_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, 'object');\n    for (var key in schema) {\n        validate_schema(schema[key]);\n    }\n}\n","var EncodeBuffer = /** @class */ (function () {\n    function EncodeBuffer() {\n        this.offset = 0;\n        this.buffer_size = 256;\n        this.buffer = new ArrayBuffer(this.buffer_size);\n        this.view = new DataView(this.buffer);\n    }\n    EncodeBuffer.prototype.resize_if_necessary = function (needed_space) {\n        if (this.buffer_size - this.offset < needed_space) {\n            this.buffer_size = Math.max(this.buffer_size * 2, this.buffer_size + needed_space);\n            var new_buffer = new ArrayBuffer(this.buffer_size);\n            new Uint8Array(new_buffer).set(new Uint8Array(this.buffer));\n            this.buffer = new_buffer;\n            this.view = new DataView(new_buffer);\n        }\n    };\n    EncodeBuffer.prototype.get_used_buffer = function () {\n        return new Uint8Array(this.buffer).slice(0, this.offset);\n    };\n    EncodeBuffer.prototype.store_value = function (value, type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.resize_if_necessary(size);\n        var toCall = type[0] === 'f' ? \"setFloat\".concat(bSize) : type[0] === 'i' ? \"setInt\".concat(bSize) : \"setUint\".concat(bSize);\n        this.view[toCall](this.offset, value, true);\n        this.offset += size;\n    };\n    EncodeBuffer.prototype.store_bytes = function (from) {\n        this.resize_if_necessary(from.length);\n        new Uint8Array(this.buffer).set(new Uint8Array(from), this.offset);\n        this.offset += from.length;\n    };\n    return EncodeBuffer;\n}());\nexport { EncodeBuffer };\nvar DecodeBuffer = /** @class */ (function () {\n    function DecodeBuffer(buf) {\n        this.offset = 0;\n        this.buffer_size = buf.length;\n        this.buffer = new ArrayBuffer(buf.length);\n        new Uint8Array(this.buffer).set(buf);\n        this.view = new DataView(this.buffer);\n    }\n    DecodeBuffer.prototype.assert_enough_buffer = function (size) {\n        if (this.offset + size > this.buffer.byteLength) {\n            throw new Error('Error in schema, the buffer is smaller than expected');\n        }\n    };\n    DecodeBuffer.prototype.consume_value = function (type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.assert_enough_buffer(size);\n        var toCall = type[0] === 'f' ? \"getFloat\".concat(bSize) : type[0] === 'i' ? \"getInt\".concat(bSize) : \"getUint\".concat(bSize);\n        var ret = this.view[toCall](this.offset, true);\n        this.offset += size;\n        return ret;\n    };\n    DecodeBuffer.prototype.consume_bytes = function (size) {\n        this.assert_enough_buffer(size);\n        var ret = this.buffer.slice(this.offset, this.offset + size);\n        this.offset += size;\n        return ret;\n    };\n    return DecodeBuffer;\n}());\nexport { DecodeBuffer };\n","import { integers } from './types.js';\nimport { EncodeBuffer } from './buffer.js';\nimport * as utils from './utils.js';\nvar BorshSerializer = /** @class */ (function () {\n    function BorshSerializer(checkTypes) {\n        this.encoded = new EncodeBuffer();\n        this.fieldPath = ['value'];\n        this.checkTypes = checkTypes;\n    }\n    BorshSerializer.prototype.encode = function (value, schema) {\n        this.encode_value(value, schema);\n        return this.encoded.get_used_buffer();\n    };\n    BorshSerializer.prototype.encode_value = function (value, schema) {\n        if (typeof schema === 'string') {\n            if (integers.includes(schema))\n                return this.encode_integer(value, schema);\n            if (schema === 'string')\n                return this.encode_string(value);\n            if (schema === 'bool')\n                return this.encode_boolean(value);\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.encode_option(value, schema);\n            if ('enum' in schema)\n                return this.encode_enum(value, schema);\n            if ('array' in schema)\n                return this.encode_array(value, schema);\n            if ('set' in schema)\n                return this.encode_set(value, schema);\n            if ('map' in schema)\n                return this.encode_map(value, schema);\n            if ('struct' in schema)\n                return this.encode_struct(value, schema);\n        }\n    };\n    BorshSerializer.prototype.encode_integer = function (value, schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            this.checkTypes && utils.expect_type(value, 'number', this.fieldPath);\n            this.encoded.store_value(value, schema);\n        }\n        else {\n            this.checkTypes && utils.expect_bigint(value, this.fieldPath);\n            this.encode_bigint(BigInt(value), size);\n        }\n    };\n    BorshSerializer.prototype.encode_bigint = function (value, size) {\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(buffer_len);\n        for (var i = 0; i < buffer_len; i++) {\n            buffer[i] = Number(value & BigInt(0xff));\n            value = value >> BigInt(8);\n        }\n        this.encoded.store_bytes(new Uint8Array(buffer));\n    };\n    BorshSerializer.prototype.encode_string = function (value) {\n        this.checkTypes && utils.expect_type(value, 'string', this.fieldPath);\n        var _value = value;\n        // 4 bytes for length\n        this.encoded.store_value(_value.length, 'u32');\n        // string bytes\n        for (var i = 0; i < _value.length; i++) {\n            this.encoded.store_value(_value.charCodeAt(i), 'u8');\n        }\n    };\n    BorshSerializer.prototype.encode_boolean = function (value) {\n        this.checkTypes && utils.expect_type(value, 'boolean', this.fieldPath);\n        this.encoded.store_value(value ? 1 : 0, 'u8');\n    };\n    BorshSerializer.prototype.encode_option = function (value, schema) {\n        if (value === null || value === undefined) {\n            this.encoded.store_value(0, 'u8');\n        }\n        else {\n            this.encoded.store_value(1, 'u8');\n            this.encode_value(value, schema.option);\n        }\n    };\n    BorshSerializer.prototype.encode_enum = function (value, schema) {\n        this.checkTypes && utils.expect_enum(value, this.fieldPath);\n        var valueKey = Object.keys(value)[0];\n        for (var i = 0; i < schema[\"enum\"].length; i++) {\n            var valueSchema = schema[\"enum\"][i];\n            if (valueKey === Object.keys(valueSchema.struct)[0]) {\n                this.encoded.store_value(i, 'u8');\n                return this.encode_struct(value, valueSchema);\n            }\n        }\n        throw new Error(\"Enum key (\".concat(valueKey, \") not found in enum schema: \").concat(JSON.stringify(schema), \" at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_array = function (value, schema) {\n        if (utils.isArrayLike(value))\n            return this.encode_arraylike(value, schema);\n        if (value instanceof ArrayBuffer)\n            return this.encode_buffer(value, schema);\n        throw new Error(\"Expected Array-like not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_arraylike = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.length, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.length, 'u32');\n        }\n        // array values\n        for (var i = 0; i < value.length; i++) {\n            this.encode_value(value[i], schema.array.type);\n        }\n    };\n    BorshSerializer.prototype.encode_buffer = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.byteLength, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.byteLength, 'u32');\n        }\n        // array values\n        this.encoded.store_bytes(new Uint8Array(value));\n    };\n    BorshSerializer.prototype.encode_set = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isSet = value instanceof Set;\n        var values = isSet ? Array.from(value.values()) : Object.values(value);\n        // 4 bytes for length\n        this.encoded.store_value(values.length, 'u32');\n        // set values\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var value_1 = values_1[_i];\n            this.encode_value(value_1, schema.set);\n        }\n    };\n    BorshSerializer.prototype.encode_map = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isMap = value instanceof Map;\n        var keys = isMap ? Array.from(value.keys()) : Object.keys(value);\n        // 4 bytes for length\n        this.encoded.store_value(keys.length, 'u32');\n        // store key/values\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            this.encode_value(key, schema.map.key);\n            this.encode_value(isMap ? value.get(key) : value[key], schema.map.value);\n        }\n    };\n    BorshSerializer.prototype.encode_struct = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        for (var _i = 0, _a = Object.keys(schema.struct); _i < _a.length; _i++) {\n            var key = _a[_i];\n            this.fieldPath.push(key);\n            this.encode_value(value[key], schema.struct[key]);\n            this.fieldPath.pop();\n        }\n    };\n    return BorshSerializer;\n}());\nexport { BorshSerializer };\n","import { integers } from './types.js';\nimport { DecodeBuffer } from './buffer.js';\nvar BorshDeserializer = /** @class */ (function () {\n    function BorshDeserializer(bufferArray) {\n        this.buffer = new DecodeBuffer(bufferArray);\n    }\n    BorshDeserializer.prototype.decode = function (schema) {\n        return this.decode_value(schema);\n    };\n    BorshDeserializer.prototype.decode_value = function (schema) {\n        if (typeof schema === 'string') {\n            if (integers.includes(schema))\n                return this.decode_integer(schema);\n            if (schema === 'string')\n                return this.decode_string();\n            if (schema === 'bool')\n                return this.decode_boolean();\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.decode_option(schema);\n            if ('enum' in schema)\n                return this.decode_enum(schema);\n            if ('array' in schema)\n                return this.decode_array(schema);\n            if ('set' in schema)\n                return this.decode_set(schema);\n            if ('map' in schema)\n                return this.decode_map(schema);\n            if ('struct' in schema)\n                return this.decode_struct(schema);\n        }\n        throw new Error(\"Unsupported type: \".concat(schema));\n    };\n    BorshDeserializer.prototype.decode_integer = function (schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            return this.buffer.consume_value(schema);\n        }\n        return this.decode_bigint(size, schema.startsWith('i'));\n    };\n    BorshDeserializer.prototype.decode_bigint = function (size, signed) {\n        if (signed === void 0) { signed = false; }\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(this.buffer.consume_bytes(buffer_len));\n        var bits = buffer.reduceRight(function (r, x) { return r + x.toString(16).padStart(2, '0'); }, '');\n        if (signed && buffer[buffer_len - 1]) {\n            return BigInt.asIntN(size, BigInt(\"0x\".concat(bits)));\n        }\n        return BigInt(\"0x\".concat(bits));\n    };\n    BorshDeserializer.prototype.decode_string = function () {\n        var len = this.decode_integer('u32');\n        var buffer = new Uint8Array(this.buffer.consume_bytes(len));\n        return String.fromCharCode.apply(null, buffer);\n    };\n    BorshDeserializer.prototype.decode_boolean = function () {\n        return this.buffer.consume_value('u8') > 0;\n    };\n    BorshDeserializer.prototype.decode_option = function (schema) {\n        var option = this.buffer.consume_value('u8');\n        if (option === 1) {\n            return this.decode_value(schema.option);\n        }\n        if (option !== 0) {\n            throw new Error(\"Invalid option \".concat(option));\n        }\n        return null;\n    };\n    BorshDeserializer.prototype.decode_enum = function (schema) {\n        var _a;\n        var valueIndex = this.buffer.consume_value('u8');\n        if (valueIndex > schema[\"enum\"].length) {\n            throw new Error(\"Enum option \".concat(valueIndex, \" is not available\"));\n        }\n        var struct = schema[\"enum\"][valueIndex].struct;\n        var key = Object.keys(struct)[0];\n        return _a = {}, _a[key] = this.decode_value(struct[key]), _a;\n    };\n    BorshDeserializer.prototype.decode_array = function (schema) {\n        var result = [];\n        var len = schema.array.len ? schema.array.len : this.decode_integer('u32');\n        for (var i = 0; i < len; ++i) {\n            result.push(this.decode_value(schema.array.type));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_set = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Set();\n        for (var i = 0; i < len; ++i) {\n            result.add(this.decode_value(schema.set));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_map = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Map();\n        for (var i = 0; i < len; ++i) {\n            var key = this.decode_value(schema.map.key);\n            var value = this.decode_value(schema.map.value);\n            result.set(key, value);\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_struct = function (schema) {\n        var result = {};\n        for (var key in schema.struct) {\n            result[key] = this.decode_value(schema.struct[key]);\n        }\n        return result;\n    };\n    return BorshDeserializer;\n}());\nexport { BorshDeserializer };\n","import { BorshSerializer } from './serialize.js';\nimport { BorshDeserializer } from './deserialize.js';\nimport * as utils from './utils.js';\nexport function serialize(schema, value, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var serializer = new BorshSerializer(validate);\n    return serializer.encode(value, schema);\n}\nexport function deserialize(schema, buffer, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var deserializer = new BorshDeserializer(buffer);\n    return deserializer.decode(schema);\n}\n",null,null,null],"names":["base64Js","b64","lens","getLens","validLen","placeHoldersLen","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","number","n","Number","isSafeInteger","bytes","b","lengths","includes","exists","instance","checkFinished","destroyed","finished","ieee754","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","base64","require$$0","require$$1","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","byteLength","actual","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","INVALID_BASE64_RE","leadSurrogate","toByteArray","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","crypto","globalThis","u8a","createView","DataView","rotr","word","shift","Uint32Array","TextEncoder","encode","toBytes","concatBytes","arrays","r","reduce","sum","pad","forEach","Hash","clone","_cloneInto","wrapConstructor","hashCons","hashC","update","digest","outputLen","blockLen","create","randomBytes","bytesLength","getRandomValues","SHA2","padOffset","view","take","process","dataView","roundClean","digestInto","setBigUint64","_32n","_u32_max","wh","wl","h","l","setUint32","oview","outLen","state","destroy","to","U32_MASK64","fromBig","le","u64","lst","Ah","Al","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","u64$2","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","_0n","_1n","_2n","hexes","_","padStart","bytesToHex","hex","numberToHexUnpadded","hexToNumber","hexToBytes","hexByte","byte","bytesToNumberBE","bytesToNumberLE","reverse","numberToBytesBE","numberToBytesLE","ensureBytes","title","expectedLength","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","v","k","reset","reseed","seed","gen","sl","genUntil","pred","validatorFns","bigint","function","boolean","stringOrUint8Array","field","object","Fp","isValid","hash","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","entries","b1","b2","bitSet","_3n","_4n","_5n","_8n","mod","result","power","modulo","pow2","invert","u","FpSqrt","P","p1div4","root","eql","sqr","c1","n2","nv","ONE","legendreC","Q","S","Z","Q1div2","neg","g","ZERO","t2","ge","tonelliShanks","FIELD_FIELDS","nLength","nBitLength","_nBitLength","nByteLength","ceil","Field","ORDER","bitLen","redef","BITS","BYTES","sqrtP","f","freeze","MASK","is0","isOdd","lhs","rhs","p","FpPow","div","sqrN","addN","subN","mulN","inv","sqrt","invertBatch","nums","lastMultiplied","acc","inverted","reduceRight","FpInvertBatch","cmov","fromBytes","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","wNAF","bits","constTimeNegate","condition","item","negate","opts","W","windows","windowSize","unsafeLadder","elm","double","precomputeWindow","points","base","window","precomputes","BASE","mask","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","wNAFCached","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","curve","Gx","Gy","VERIFY_DEFAULT","zip215","twistedEdwards","curveDef","CURVE","ut","adjustScalarBytes","domain","uvRatio","mapToCurve","validateOpts","CURVE_ORDER","prehash","cHash","cofactor","modP","ctx","phflag","inBig","inRange","in0MaskRange","assertInRange","assertGE0","pointPrecomputes","Map","isPoint","other","Point","ex","ey","ez","et","toAffine","fromAffine","normalizeZ","toInv","_setWindowSize","delete","assertValidity","X","Y","T","X2","Y2","Z2","Z4","aX2","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","wnaf","multiply","scalar","multiplyUnsafe","I","isSmallOrder","isTorsionFree","iz","z","ax","ay","zz","clearCofactor","fromHex","normed","lastByte","y2","isXOdd","isLastByteOdd","fromPrivateKey","privKey","getExtendedPublicKey","point","toRawBytes","toHex","modN","modN_LE","key","hashed","head","prefix","pointBytes","hashDomainToScalar","context","msgs","verifyOpts","getPublicKey","sign","options","R","verify","sig","publicKey","SB","ExtendedPoint","utils","randomPrivateKey","precompute","ED25519_P","ED25519_SQRT_M1","_10n","_20n","_40n","_80n","ed25519Defaults","v3","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","ed25519_pow_2_252_3","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519","ELL2_C1","FpSqrtEven","module","assert","inherits","ctor","superCtor","super_","TempCtor","BN","endian","isBN","negative","words","red","_init","wordSize","parseHex4Bits","index","parseHexByte","lowerBound","parseBase","move","dest","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","w","off","_strip","limbLen","limbPow","total","imuln","_iaddn","_move","_expand","_normSign","for","zeros","groupSizes","groupBases","smallMulTo","self","carry","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modrn","idivn","toNumber","toBuffer","toArrayLike","ArrayType","reqLength","allocate","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","b3","bl3","bh3","bl4","bh4","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","isqr","toBitArray","q","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","isEven","yp","xp","im","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","prev","next","mod3","one","nOne","lpow","wnd","current","currentLen","mont","copyProps","SafeBuffer","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","source","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","decode","bs58","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","W2","s0","s1","Chi","sha256","ToDictionary","Stream","tokens","endOfStream","prepend","token","unshift","pop","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","count","temp","input_stream","code_points","cp","codePointsToString","opt_string","stringToCodePoints","__createBinding","k2","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","hasOwnProperty","__importDefault","default","lib","deserializeUnchecked_1","deserializeUnchecked","deserialize_1","deserialize","serialize_1","serialize","BinaryWriter","BorshError","baseDecode","bn_js_1","bs58_1","require$$2","textDecoder","baseEncode","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","splice","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","args","BinaryReader","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","schema","fieldType","writer","kind","serializeStruct","borshSerialize","structSchema","fields","idx","values","Writer","deserializeField","reader","deserializeStruct","classType","borshDeserialize","Reader","Layout_1","constant","utf8","cstr","blob","unionLayoutDiscriminator","union","seq","struct","f64be","f64","f32be","f32","ns64be","s48be","s40be","s32be","s24be","s16be","ns64","s48","s40","s32","s24","buffer_1","checkUint8Array","uint8ArrayToBuffer","Layout","span","property","replicate","rv","assign","fromArray","nameWithProperty","bindConstructorLayout","Class","layout","layout_","boundConstructor_","makeDestinationObject","isCount","GreedyCount","ExternalLayout","elementSpan","rem","OffsetLayout","UInt","UIntBE","IntBE","V2E32","divmodInt64","hi32","lo32","NearUInt64","roundedInt64","NearUInt64BE","NearInt64","NearInt64BE","Float","FloatBE","Double","DoubleBE","Sequence","elementLayout","getSpan","elo","Structure","decodePrefixes","fd","fsp","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionLayoutDiscriminator","UnionDiscriminator","discr","defaultLayout","discriminator","configGetSourceVariant","gsv","boundGetSourceVariant","bind","vlo","getVariant","defaultGetSourceVariant","registry","tag","dlo","clo","usesPrefixDiscriminator","contentOffset","getSourceVariant","addVariant","variant","VariantLayout","vb","Union","fixBitwiseResult","BitStructure","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","container","usedBits","totalBits","valueMask","wordMask","wordValue","srcBuffer","CString","srcb","maxSpan","browser","toBigIntLE_1","toBigIntLE","reversed","toBigIntBE","toBufferLE_1","toBufferLE","toBufferBE","StructError","failure","failures","cached","rest","path","_cached","rnds8","rng","msCrypto","REGEX","validate","uuid","test","_nodeId","_clockseq","byteToHex","stringify","_lastMSecs","_lastNSecs","parse","v35","version","hashfunc","generateUUID","namespace","unescape","encodeURIComponent","stringToBytes","err","DNS","URL","getOutputLength","inputLength8","safeAdd","lsw","md5cmn","cnt","md5ff","md5gg","md5hh","md5ii","length32","hexTab","md5ToHexEncodedArray","olda","oldb","oldc","oldd","wordsToMd5","length8","bytesToWords","v3$1","ROTL","v5","K","N","M","_i","_i2","_t","_t2","v5$1","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","rnds","v4","generateRequest_1","method","params","id","request","jsonrpc","generator","notificationIdNull","generateRequest","ClientBrowser","callServer","reviver","replacer","callback","isBatch","hasCallback","JSON","response","_parseResponse","responseText","isError","isNotError","filter","_typeof","iterator","runtime","_regeneratorRuntime","asyncIterator","toStringTag","define","wrap","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","done","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","displayName","isGeneratorFunction","mark","__proto__","awrap","async","Promise","keys","stop","rval","handle","complete","finish","catch","delegateYield","regenerator","regeneratorRuntime","accidentalStrictMode","Function","Constructor","prim","toPropertyKey","_defineProperties","props","descriptor","protoProps","staticProps","_setPrototypeOf","subClass","superClass","ReferenceError","assertThisInitialized","_getPrototypeOf","has","Events","EE","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","eventNames","events","names","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","removeListener","on","removeAllListeners","prefixed","_interopRequireDefault","_regenerator","_asyncToGenerator2","asyncGeneratorStep","reject","_next","_throw","info","_typeof2","require$$3","_classCallCheck2","require$$4","_createClass2","require$$5","_inherits2","require$$6","_possibleConstructorReturn2","require$$7","_getPrototypeOf2","require$$8","_eventemitter","require$$9","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","_isNativeReflectConstruct","Super","NewTarget","CommonClient","_EventEmitter","_unsubscribe","_subscribe","_listMethods","_login","_super","webSocketFactory","_this","address","_a","generate_request_id","_a$autoconnect","autoconnect","_a$reconnect","reconnect","_a$reconnect_interval","reconnect_interval","_a$max_reconnects","max_reconnects","rest_options","propertyIsEnumerable","__rest","queue","rpc_id","ready","reconnect_timer_id","current_reconnects","_connect","socket","timeout","ws_opts","_this2","send","promise","setTimeout","_callee","resp","_context","_x","_callee2","_context2","_this3","_callee3","_context3","_x2","_callee4","_context4","_x3","close","_this4","clearTimeout","addEventListener","_ref","notification","_ref2","reason","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","cb","b2n","h2b","DER","Err","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","rhl","rl","weierstrassPoints","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","validatePointOpts","_c","_isCompressed","tail","weierstrassEquation","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","assertPrjPoint","px","py","pz","privateKey","hasEvenY","U1","U2","t0","t1","t3","t4","t5","k1neg","k1","k2neg","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","isCompressed","_bits","ProjectivePoint","weierstrass","hmac","bits2int","bits2int_modN","lowS","compressedLen","uncompressedLen","invN","cat","numToNByteStr","isBiggerThanHalfOrder","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","fieldLen","minLen","reduced","isProbPub","ORDER_MASK","int2octets","prepSig","defaultSigOpts","some","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","getSharedSecret","privateA","publicB","drbg","signature","sg","_sig","derError","is","HMAC","_key","assertHash","iHash","oHash","assertExists","assertBytes","getHash","secp256k1P","secp256k1N","divNearest","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","secp256k1","defHash","createCurve","POW_2_128","c2","isOnCurve","secretKey","extendStatics","integers","EncodeBuffer","buffer_size","resize_if_necessary","needed_space","new_buffer","get_used_buffer","store_value","bSize","substring","toCall","store_bytes","DecodeBuffer","assert_enough_buffer","consume_value","consume_bytes","__extends","__","expect_type","expect_same_size","expected","VALID_STRING_TYPES","VALID_OBJECT_KEYS","ErrorSchema","validate_schema","schema_1","sch","validate_enum_schema","validate_array_schema","validate_map_schema","validate_struct_schema","BorshSerializer","checkTypes","encoded","encode_value","encode_integer","encode_string","encode_boolean","encode_option","encode_enum","encode_array","encode_set","encode_map","encode_struct","encode_bigint","buffer_len","_value","option","valueKey","valueSchema","encode_arraylike","encode_buffer","Set","values_1","value_1","isMap","keys_1","BorshDeserializer","bufferArray","decode_value","decode_integer","decode_string","decode_boolean","decode_option","decode_enum","decode_array","decode_set","decode_map","decode_struct","decode_bigint","startsWith","signed","asIntN","valueIndex","allocateAndPostRecordInstruction","record","content","getInstruction","programId","systemProgram","splNameServiceProgram","feePayer","domainOwner","centralState","pubkey","isSigner","isWritable","TransactionInstruction","validateEthereumSignatureInstruction","validation","expectedPubkey","allocateRecordInstruction","contentLength","validateSolanaSignatureInstruction","staleness","verifier","editRecordInstruction","deleteRecordInstruction","writeRoaInstruction","roaId","unverifyRoaInstruction","SNS_RECORDS_ID","PublicKey","CENTRAL_STATE_SNS_RECORDS","findProgramAddressSync","Validation","getValidationLength","None","Ethereum","Solana","UnverifiedSolana","RecordHeader","stalenessValidation","rightOfAssociationValidation","retrieve","connection","getAccountInfo","LEN","Record","header","retrieveBatch","getMultipleAccountsInfo","getContent","startOffset","getStalenessId","endOffset","getRoAId","recordKey","domainKey","nameProgramId","SystemProgram"],"mappings":"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AoB7vD,KAAK0wD,OAAOP,qBAChD,OAAOnwD,KAAKd,KAAKpB,MAAM,EAAGkzD,EAC3B,CAED,QAAAC,GACE,IAAIH,EAAcjB,GAAoB7vD,KAAK0wD,OAAOP,qBAC9Ca,EACFF,EACAjB,GAAoB7vD,KAAK0wD,OAAON,8BAClC,OAAOpwD,KAAKd,KAAKpB,MAAMgzD,EAAaE,EACrC,iEA/H8B,qGDgCI,CACnC5C,EACA8C,EACAC,EACA9C,EACA+C,EACAtD,EACAC,EACAE,IAEW,IAAIJ,GAAiC,CAC9CC,SACAC,QAAS70D,MAAMsE,KAAKuwD,KACnBC,eACDC,EACAoD,GAAcpD,UACdmD,EACAhD,EACA8C,EACAC,EACA9C,EACAqB,uEAK0B,CAC5BtB,EACA8C,EACAC,EACA9C,EACA+C,EACAtD,EACAiB,EACAd,IAEW,IAAIa,GAA0B,CACvCC,gBACAjB,WACCE,eACDC,EACAoD,GAAcpD,UACdmD,EACAhD,EACA8C,EACAC,EACA9C,EACAqB,8DAKwB,CAC1BtB,EACA+C,EACA9C,EACA6C,EACAE,EACAnD,KAEW,IAAImB,IAA0BpB,eACvCC,EACAoD,GAAcpD,UACdmD,EACAhD,EACA8C,EACAC,EACA9C,EACAqB,0DAKsB,CACxBtB,EACA8C,EACAC,EACA9C,EACA+C,EACAtD,EACAC,EACAE,IAEW,IAAIkB,GAAsB,CACnCrB,SACAC,QAAS70D,MAAMsE,KAAKuwD,KACnBC,eACDC,EACAoD,GAAcpD,UACdmD,EACAhD,EACA8C,EACAC,EACA9C,EACAqB,wFAmFuB,CACzBtB,EACAgD,EACAF,EACAC,EACAjC,EACAjB,KAEW,IAAIsB,IAAyBvB,eACtCC,EACAoD,GAAcpD,UACdmD,EACAhD,EACA8C,EACAC,EACAzB,GACAR,kEA9FgC,CAClCd,EACA8C,EACAC,EACA9C,EACA+C,EACAxC,EACA9H,EACA+H,EACAZ,IAEW,IAAIU,GAAqC,CAClDC,aACA9H,UAAW5tD,MAAMsE,KAAKspD,GACtB+H,eAAgB31D,MAAMsE,KAAKqxD,KAC1Bb,eACDC,EACAoD,GAAcpD,UACdmD,EACAhD,EACA8C,EACAC,EACA9C,EACAqB,oFAKmC,CACrCtB,EACA8C,EACAC,EACA9C,EACAa,EACAkC,EACAnC,EACAhB,IAEW,IAAIe,GAAmC,CAChDC,cACCjB,eACDC,EACAoD,GAAcpD,UACdmD,EACAhD,EACA8C,EACAC,EACA9C,EACAqB,GACAR,kEAKoB,CACtBd,EACAgD,EACAF,EACAC,EACA9C,EACAiB,EACArB,IAEW,IAAIoB,GAAoB,CACjCC,MAAOp2D,MAAMsE,KAAK8xD,EAAM9iC,cACvBwhC,eACDC,EACAoD,GAAcpD,UACdmD,EACAhD,EACA8C,EACAC,EACA9C,EACAqB"}